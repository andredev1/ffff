{"ast":null,"code":"import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeBlackCrows extends CandlestickFinder {\n  constructor() {\n    super();\n    this.name = 'ThreeBlackCrows';\n    this.requiredCount = 3;\n  }\n\n  logic(data) {\n    let firstdaysOpen = data.open[0];\n    let firstdaysClose = data.close[0];\n    let firstdaysHigh = data.high[0];\n    let firstdaysLow = data.low[0];\n    let seconddaysOpen = data.open[1];\n    let seconddaysClose = data.close[1];\n    let seconddaysHigh = data.high[1];\n    let seconddaysLow = data.low[1];\n    let thirddaysOpen = data.open[2];\n    let thirddaysClose = data.close[2];\n    let thirddaysHigh = data.high[2];\n    let thirddaysLow = data.low[2];\n    let isDownTrend = firstdaysLow > seconddaysLow && seconddaysLow > thirddaysLow;\n    let isAllBearish = firstdaysOpen > firstdaysClose && seconddaysOpen > seconddaysClose && thirddaysOpen > thirddaysClose;\n    let doesOpenWithinPreviousBody = firstdaysOpen > seconddaysOpen && seconddaysOpen > firstdaysClose && seconddaysOpen > thirddaysOpen && thirddaysOpen > seconddaysClose;\n    return isDownTrend && isAllBearish && doesOpenWithinPreviousBody;\n  }\n\n}\nexport function threeblackcrows(data) {\n  return new ThreeBlackCrows().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/Documents/ffff/node_modules/technicalindicators/lib/candlestick/ThreeBlackCrows.js"],"names":["CandlestickFinder","ThreeBlackCrows","constructor","name","requiredCount","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","thirddaysHigh","thirddaysLow","isDownTrend","isAllBearish","doesOpenWithinPreviousBody","threeblackcrows","hasPattern"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,eAAe,MAAMC,eAAN,SAA8BD,iBAA9B,CAAgD;AAC3DE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,iBAAZ;AACA,SAAKC,aAAL,GAAqB,CAArB;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIC,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,YAAY,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIC,cAAc,GAAGT,IAAI,CAACE,IAAL,CAAU,CAAV,CAArB;AACA,QAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAL,CAAW,CAAX,CAAtB;AACA,QAAIO,cAAc,GAAGX,IAAI,CAACM,IAAL,CAAU,CAAV,CAArB;AACA,QAAIM,aAAa,GAAGZ,IAAI,CAACQ,GAAL,CAAS,CAAT,CAApB;AACA,QAAIK,aAAa,GAAGb,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIY,cAAc,GAAGd,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIW,aAAa,GAAGf,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIU,YAAY,GAAGhB,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIS,WAAW,GAAGV,YAAY,GAAGK,aAAf,IACdA,aAAa,GAAGI,YADpB;AAEA,QAAIE,YAAY,GAAGjB,aAAa,GAAGE,cAAhB,IACfM,cAAc,GAAGC,eADF,IAEfG,aAAa,GAAGC,cAFpB;AAGA,QAAIK,0BAA0B,GAAGlB,aAAa,GAAGQ,cAAhB,IAC7BA,cAAc,GAAGN,cADY,IAE7BM,cAAc,GAAGI,aAFY,IAG7BA,aAAa,GAAGH,eAHpB;AAIA,WAAQO,WAAW,IAAIC,YAAf,IAA+BC,0BAAvC;AACH;;AA7B0D;AA+B/D,OAAO,SAASC,eAAT,CAAyBpB,IAAzB,EAA+B;AAClC,SAAO,IAAIL,eAAJ,GAAsB0B,UAAtB,CAAiCrB,IAAjC,CAAP;AACH","sourcesContent":["import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeBlackCrows extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeBlackCrows';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isDownTrend = firstdaysLow > seconddaysLow &&\n            seconddaysLow > thirddaysLow;\n        let isAllBearish = firstdaysOpen > firstdaysClose &&\n            seconddaysOpen > seconddaysClose &&\n            thirddaysOpen > thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysOpen > seconddaysOpen &&\n            seconddaysOpen > firstdaysClose &&\n            seconddaysOpen > thirddaysOpen &&\n            thirddaysOpen > seconddaysClose;\n        return (isDownTrend && isAllBearish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threeblackcrows(data) {\n    return new ThreeBlackCrows().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}