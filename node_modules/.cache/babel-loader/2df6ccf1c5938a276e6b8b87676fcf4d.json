{"ast":null,"code":"import CandlestickFinder from './CandlestickFinder';\nexport default class BullishInvertedHammerStick extends CandlestickFinder {\n  constructor() {\n    super();\n    this.name = 'BullishInvertedHammerStick';\n    this.requiredCount = 1;\n  }\n\n  logic(data) {\n    let daysOpen = data.open[0];\n    let daysClose = data.close[0];\n    let daysHigh = data.high[0];\n    let daysLow = data.low[0];\n    let isBullishInvertedHammer = daysClose > daysOpen;\n    isBullishInvertedHammer = isBullishInvertedHammer && this.approximateEqual(daysOpen, daysLow);\n    isBullishInvertedHammer = isBullishInvertedHammer && daysClose - daysOpen <= 2 * (daysHigh - daysClose);\n    return isBullishInvertedHammer;\n  }\n\n}\nexport function bullishinvertedhammerstick(data) {\n  return new BullishInvertedHammerStick().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/candlestick/BullishInvertedHammerStick.js"],"names":["CandlestickFinder","BullishInvertedHammerStick","constructor","name","requiredCount","logic","data","daysOpen","open","daysClose","close","daysHigh","high","daysLow","low","isBullishInvertedHammer","approximateEqual","bullishinvertedhammerstick","hasPattern"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,eAAe,MAAMC,0BAAN,SAAyCD,iBAAzC,CAA2D;AACtEE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,4BAAZ;AACA,SAAKC,aAAL,GAAqB,CAArB;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAAf;AACA,QAAIC,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAhB;AACA,QAAIC,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAAf;AACA,QAAIC,OAAO,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAd;AACA,QAAIC,uBAAuB,GAAGN,SAAS,GAAGF,QAA1C;AACAQ,IAAAA,uBAAuB,GAAGA,uBAAuB,IAAI,KAAKC,gBAAL,CAAsBT,QAAtB,EAAgCM,OAAhC,CAArD;AACAE,IAAAA,uBAAuB,GAAGA,uBAAuB,IAAKN,SAAS,GAAGF,QAAb,IAA0B,KAAKI,QAAQ,GAAGF,SAAhB,CAA/E;AACA,WAAOM,uBAAP;AACH;;AAfqE;AAiB1E,OAAO,SAASE,0BAAT,CAAoCX,IAApC,EAA0C;AAC7C,SAAO,IAAIL,0BAAJ,GAAiCiB,UAAjC,CAA4CZ,IAA5C,CAAP;AACH","sourcesContent":["import CandlestickFinder from './CandlestickFinder';\nexport default class BullishInvertedHammerStick extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishInvertedHammerStick';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBullishInvertedHammer = daysClose > daysOpen;\n        isBullishInvertedHammer = isBullishInvertedHammer && this.approximateEqual(daysOpen, daysLow);\n        isBullishInvertedHammer = isBullishInvertedHammer && (daysClose - daysOpen) <= 2 * (daysHigh - daysClose);\n        return isBullishInvertedHammer;\n    }\n}\nexport function bullishinvertedhammerstick(data) {\n    return new BullishInvertedHammerStick().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}