{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\n\"use strict\";\n\nimport { WEMA } from '../moving_averages/WEMA';\nimport { TrueRange } from './TrueRange';\nexport class ATRInput extends IndicatorInput {}\n;\nexport class ATR extends Indicator {\n  constructor(input) {\n    super(input);\n    var lows = input.low;\n    var highs = input.high;\n    var closes = input.close;\n    var period = input.period;\n    var format = this.format;\n\n    if (!(lows.length === highs.length && highs.length === closes.length)) {\n      throw 'Inputs(low,high, close) not of equal size';\n    }\n\n    var trueRange = new TrueRange({\n      low: [],\n      high: [],\n      close: []\n    });\n    var wema = new WEMA({\n      period: period,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    this.result = [];\n\n    this.generator = function* () {\n      var tick = yield;\n      var avgTrueRange, trange;\n      ;\n\n      while (true) {\n        trange = trueRange.nextValue({\n          low: tick.low,\n          high: tick.high,\n          close: tick.close\n        });\n\n        if (trange === undefined) {\n          avgTrueRange = undefined;\n        } else {\n          avgTrueRange = wema.nextValue(trange);\n        }\n\n        tick = yield avgTrueRange;\n      }\n    }();\n\n    this.generator.next();\n    lows.forEach((tick, index) => {\n      var result = this.generator.next({\n        high: highs[index],\n        low: lows[index],\n        close: closes[index]\n      });\n\n      if (result.value !== undefined) {\n        this.result.push(format(result.value));\n      }\n    });\n  }\n\n  nextValue(price) {\n    return this.generator.next(price).value;\n  }\n\n}\nATR.calculate = atr;\nexport function atr(input) {\n  Indicator.reverseInputs(input);\n  var result = new ATR(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Downloads/ffff-main/node_modules/technicalindicators/lib/directionalmovement/ATR.js"],"names":["Indicator","IndicatorInput","WEMA","TrueRange","ATRInput","ATR","constructor","input","lows","low","highs","high","closes","close","period","format","length","trueRange","wema","values","v","result","generator","tick","avgTrueRange","trange","nextValue","undefined","next","forEach","index","value","push","price","calculate","atr","reverseInputs","reversedInput","reverse"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA;AACA;AACA;;AACA;;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,MAAMC,QAAN,SAAuBH,cAAvB,CAAsC;AAE7C;AACA,OAAO,MAAMI,GAAN,SAAkBL,SAAlB,CAA4B;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,IAAI,GAAGD,KAAK,CAACE,GAAjB;AACA,QAAIC,KAAK,GAAGH,KAAK,CAACI,IAAlB;AACA,QAAIC,MAAM,GAAGL,KAAK,CAACM,KAAnB;AACA,QAAIC,MAAM,GAAGP,KAAK,CAACO,MAAnB;AACA,QAAIC,MAAM,GAAG,KAAKA,MAAlB;;AACA,QAAI,EAAGP,IAAI,CAACQ,MAAL,KAAgBN,KAAK,CAACM,MAAvB,IAAmCN,KAAK,CAACM,MAAN,KAAiBJ,MAAM,CAACI,MAA7D,CAAJ,EAA2E;AACvE,YAAO,2CAAP;AACH;;AACD,QAAIC,SAAS,GAAG,IAAId,SAAJ,CAAc;AAC1BM,MAAAA,GAAG,EAAE,EADqB;AAE1BE,MAAAA,IAAI,EAAE,EAFoB;AAG1BE,MAAAA,KAAK,EAAE;AAHmB,KAAd,CAAhB;AAKA,QAAIK,IAAI,GAAG,IAAIhB,IAAJ,CAAS;AAAEY,MAAAA,MAAM,EAAEA,MAAV;AAAkBK,MAAAA,MAAM,EAAE,EAA1B;AAA8BJ,MAAAA,MAAM,EAAGK,CAAD,IAAO;AAAE,eAAOA,CAAP;AAAW;AAA1D,KAAT,CAAX;AACA,SAAKC,MAAL,GAAc,EAAd;;AACA,SAAKC,SAAL,GAAkB,aAAa;AAC3B,UAAIC,IAAI,GAAG,KAAX;AACA,UAAIC,YAAJ,EAAkBC,MAAlB;AACA;;AACA,aAAO,IAAP,EAAa;AACTA,QAAAA,MAAM,GAAGR,SAAS,CAACS,SAAV,CAAoB;AACzBjB,UAAAA,GAAG,EAAEc,IAAI,CAACd,GADe;AAEzBE,UAAAA,IAAI,EAAEY,IAAI,CAACZ,IAFc;AAGzBE,UAAAA,KAAK,EAAEU,IAAI,CAACV;AAHa,SAApB,CAAT;;AAKA,YAAIY,MAAM,KAAKE,SAAf,EAA0B;AACtBH,UAAAA,YAAY,GAAGG,SAAf;AACH,SAFD,MAGK;AACDH,UAAAA,YAAY,GAAGN,IAAI,CAACQ,SAAL,CAAeD,MAAf,CAAf;AACH;;AACDF,QAAAA,IAAI,GAAG,MAAMC,YAAb;AACH;AACJ,KAlBgB,EAAjB;;AAmBA,SAAKF,SAAL,CAAeM,IAAf;AACApB,IAAAA,IAAI,CAACqB,OAAL,CAAa,CAACN,IAAD,EAAOO,KAAP,KAAiB;AAC1B,UAAIT,MAAM,GAAG,KAAKC,SAAL,CAAeM,IAAf,CAAoB;AAC7BjB,QAAAA,IAAI,EAAED,KAAK,CAACoB,KAAD,CADkB;AAE7BrB,QAAAA,GAAG,EAAED,IAAI,CAACsB,KAAD,CAFoB;AAG7BjB,QAAAA,KAAK,EAAED,MAAM,CAACkB,KAAD;AAHgB,OAApB,CAAb;;AAKA,UAAIT,MAAM,CAACU,KAAP,KAAiBJ,SAArB,EAAgC;AAC5B,aAAKN,MAAL,CAAYW,IAAZ,CAAiBjB,MAAM,CAACM,MAAM,CAACU,KAAR,CAAvB;AACH;AACJ,KATD;AAUH;;AAEDL,EAAAA,SAAS,CAACO,KAAD,EAAQ;AACb,WAAO,KAAKX,SAAL,CAAeM,IAAf,CAAoBK,KAApB,EAA2BF,KAAlC;AACH;;AApD8B;AAuDnC1B,GAAG,CAAC6B,SAAJ,GAAgBC,GAAhB;AACA,OAAO,SAASA,GAAT,CAAa5B,KAAb,EAAoB;AACvBP,EAAAA,SAAS,CAACoC,aAAV,CAAwB7B,KAAxB;AACA,MAAIc,MAAM,GAAG,IAAIhB,GAAJ,CAAQE,KAAR,EAAec,MAA5B;;AACA,MAAId,KAAK,CAAC8B,aAAV,EAAyB;AACrBhB,IAAAA,MAAM,CAACiB,OAAP;AACH;;AACDtC,EAAAA,SAAS,CAACoC,aAAV,CAAwB7B,KAAxB;AACA,SAAOc,MAAP;AACH;AACD","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nimport { WEMA } from '../moving_averages/WEMA';\nimport { TrueRange } from './TrueRange';\nexport class ATRInput extends IndicatorInput {\n}\n;\nexport class ATR extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        var trueRange = new TrueRange({\n            low: [],\n            high: [],\n            close: []\n        });\n        var wema = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            var avgTrueRange, trange;\n            ;\n            while (true) {\n                trange = trueRange.nextValue({\n                    low: tick.low,\n                    high: tick.high,\n                    close: tick.close\n                });\n                if (trange === undefined) {\n                    avgTrueRange = undefined;\n                }\n                else {\n                    avgTrueRange = wema.nextValue(trange);\n                }\n                tick = yield avgTrueRange;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nATR.calculate = atr;\nexport function atr(input) {\n    Indicator.reverseInputs(input);\n    var result = new ATR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}