{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { ATR } from '../directionalmovement/ATR';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ChandelierExitInput extends IndicatorInput {\n  constructor() {\n    super(...arguments);\n    this.period = 22;\n    this.multiplier = 3;\n  }\n\n}\nexport class ChandelierExitOutput extends IndicatorInput {}\n;\nexport class ChandelierExit extends Indicator {\n  constructor(input) {\n    super(input);\n    var highs = input.high;\n    var lows = input.low;\n    var closes = input.close;\n    this.result = [];\n    var atrProducer = new ATR({\n      period: input.period,\n      high: [],\n      low: [],\n      close: [],\n      format: v => {\n        return v;\n      }\n    });\n    var dataCollector = new LinkedList(input.period * 2, true, true, false);\n\n    this.generator = function* () {\n      var result;\n      var tick = yield;\n      var atr;\n\n      while (true) {\n        var {\n          high,\n          low\n        } = tick;\n        dataCollector.push(high);\n        dataCollector.push(low);\n        atr = atrProducer.nextValue(tick);\n\n        if (dataCollector.totalPushed >= 2 * input.period && atr != undefined) {\n          result = {\n            exitLong: dataCollector.periodHigh - atr * input.multiplier,\n            exitShort: dataCollector.periodLow + atr * input.multiplier\n          };\n        }\n\n        tick = yield result;\n      }\n    }();\n\n    this.generator.next();\n    highs.forEach((tickHigh, index) => {\n      var tickInput = {\n        high: tickHigh,\n        low: lows[index],\n        close: closes[index]\n      };\n      var result = this.generator.next(tickInput);\n\n      if (result.value != undefined) {\n        this.result.push(result.value);\n      }\n    });\n  }\n\n  nextValue(price) {\n    var result = this.generator.next(price);\n\n    if (result.value != undefined) {\n      return result.value;\n    }\n  }\n\n}\nChandelierExit.calculate = chandelierexit;\nexport function chandelierexit(input) {\n  Indicator.reverseInputs(input);\n  var result = new ChandelierExit(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Documents/ffff/node_modules/technicalindicators/lib/volatility/ChandelierExit.js"],"names":["Indicator","IndicatorInput","ATR","LinkedList","ChandelierExitInput","constructor","arguments","period","multiplier","ChandelierExitOutput","ChandelierExit","input","highs","high","lows","low","closes","close","result","atrProducer","format","v","dataCollector","generator","tick","atr","push","nextValue","totalPushed","undefined","exitLong","periodHigh","exitShort","periodLow","next","forEach","tickHigh","index","tickInput","value","price","calculate","chandelierexit","reverseInputs","reversedInput","reverse"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA,SAASC,GAAT,QAAoB,4BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,MAAMC,mBAAN,SAAkCH,cAAlC,CAAiD;AACpDI,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACH;;AALmD;AAOxD,OAAO,MAAMC,oBAAN,SAAmCR,cAAnC,CAAkD;AAEzD;AACA,OAAO,MAAMS,cAAN,SAA6BV,SAA7B,CAAuC;AAC1CK,EAAAA,WAAW,CAACM,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,KAAK,GAAGD,KAAK,CAACE,IAAlB;AACA,QAAIC,IAAI,GAAGH,KAAK,CAACI,GAAjB;AACA,QAAIC,MAAM,GAAGL,KAAK,CAACM,KAAnB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,QAAIC,WAAW,GAAG,IAAIjB,GAAJ,CAAQ;AAAEK,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAhB;AAAwBM,MAAAA,IAAI,EAAE,EAA9B;AAAkCE,MAAAA,GAAG,EAAE,EAAvC;AAA2CE,MAAAA,KAAK,EAAE,EAAlD;AAAsDG,MAAAA,MAAM,EAAGC,CAAD,IAAO;AAAE,eAAOA,CAAP;AAAW;AAAlF,KAAR,CAAlB;AACA,QAAIC,aAAa,GAAG,IAAInB,UAAJ,CAAeQ,KAAK,CAACJ,MAAN,GAAe,CAA9B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,KAA7C,CAApB;;AACA,SAAKgB,SAAL,GAAkB,aAAa;AAC3B,UAAIL,MAAJ;AACA,UAAIM,IAAI,GAAG,KAAX;AACA,UAAIC,GAAJ;;AACA,aAAO,IAAP,EAAa;AACT,YAAI;AAAEZ,UAAAA,IAAF;AAAQE,UAAAA;AAAR,YAAgBS,IAApB;AACAF,QAAAA,aAAa,CAACI,IAAd,CAAmBb,IAAnB;AACAS,QAAAA,aAAa,CAACI,IAAd,CAAmBX,GAAnB;AACAU,QAAAA,GAAG,GAAGN,WAAW,CAACQ,SAAZ,CAAsBH,IAAtB,CAAN;;AACA,YAAKF,aAAa,CAACM,WAAd,IAA8B,IAAIjB,KAAK,CAACJ,MAAzC,IAAqDkB,GAAG,IAAII,SAAhE,EAA2E;AACvEX,UAAAA,MAAM,GAAG;AACLY,YAAAA,QAAQ,EAAER,aAAa,CAACS,UAAd,GAA2BN,GAAG,GAAGd,KAAK,CAACH,UAD5C;AAELwB,YAAAA,SAAS,EAAEV,aAAa,CAACW,SAAd,GAA0BR,GAAG,GAAGd,KAAK,CAACH;AAF5C,WAAT;AAIH;;AACDgB,QAAAA,IAAI,GAAG,MAAMN,MAAb;AACH;AACJ,KAjBgB,EAAjB;;AAkBA,SAAKK,SAAL,CAAeW,IAAf;AACAtB,IAAAA,KAAK,CAACuB,OAAN,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC/B,UAAIC,SAAS,GAAG;AACZzB,QAAAA,IAAI,EAAEuB,QADM;AAEZrB,QAAAA,GAAG,EAAED,IAAI,CAACuB,KAAD,CAFG;AAGZpB,QAAAA,KAAK,EAAED,MAAM,CAACqB,KAAD;AAHD,OAAhB;AAKA,UAAInB,MAAM,GAAG,KAAKK,SAAL,CAAeW,IAAf,CAAoBI,SAApB,CAAb;;AACA,UAAIpB,MAAM,CAACqB,KAAP,IAAgBV,SAApB,EAA+B;AAC3B,aAAKX,MAAL,CAAYQ,IAAZ,CAAiBR,MAAM,CAACqB,KAAxB;AACH;AACJ,KAVD;AAWH;;AAEDZ,EAAAA,SAAS,CAACa,KAAD,EAAQ;AACb,QAAItB,MAAM,GAAG,KAAKK,SAAL,CAAeW,IAAf,CAAoBM,KAApB,CAAb;;AACA,QAAItB,MAAM,CAACqB,KAAP,IAAgBV,SAApB,EAA+B;AAC3B,aAAOX,MAAM,CAACqB,KAAd;AACH;AACJ;;AA9CyC;AAiD9C7B,cAAc,CAAC+B,SAAf,GAA2BC,cAA3B;AACA,OAAO,SAASA,cAAT,CAAwB/B,KAAxB,EAA+B;AAClCX,EAAAA,SAAS,CAAC2C,aAAV,CAAwBhC,KAAxB;AACA,MAAIO,MAAM,GAAG,IAAIR,cAAJ,CAAmBC,KAAnB,EAA0BO,MAAvC;;AACA,MAAIP,KAAK,CAACiC,aAAV,EAAyB;AACrB1B,IAAAA,MAAM,CAAC2B,OAAP;AACH;;AACD7C,EAAAA,SAAS,CAAC2C,aAAV,CAAwBhC,KAAxB;AACA,SAAOO,MAAP;AACH;AACD","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { ATR } from '../directionalmovement/ATR';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ChandelierExitInput extends IndicatorInput {\n    constructor() {\n        super(...arguments);\n        this.period = 22;\n        this.multiplier = 3;\n    }\n}\nexport class ChandelierExitOutput extends IndicatorInput {\n}\n;\nexport class ChandelierExit extends Indicator {\n    constructor(input) {\n        super(input);\n        var highs = input.high;\n        var lows = input.low;\n        var closes = input.close;\n        this.result = [];\n        var atrProducer = new ATR({ period: input.period, high: [], low: [], close: [], format: (v) => { return v; } });\n        var dataCollector = new LinkedList(input.period * 2, true, true, false);\n        this.generator = (function* () {\n            var result;\n            var tick = yield;\n            var atr;\n            while (true) {\n                var { high, low } = tick;\n                dataCollector.push(high);\n                dataCollector.push(low);\n                atr = atrProducer.nextValue(tick);\n                if ((dataCollector.totalPushed >= (2 * input.period)) && atr != undefined) {\n                    result = {\n                        exitLong: dataCollector.periodHigh - atr * input.multiplier,\n                        exitShort: dataCollector.periodLow + atr * input.multiplier\n                    };\n                }\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        highs.forEach((tickHigh, index) => {\n            var tickInput = {\n                high: tickHigh,\n                low: lows[index],\n                close: closes[index],\n            };\n            var result = this.generator.next(tickInput);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        var result = this.generator.next(price);\n        if (result.value != undefined) {\n            return result.value;\n        }\n    }\n    ;\n}\nChandelierExit.calculate = chandelierexit;\nexport function chandelierexit(input) {\n    Indicator.reverseInputs(input);\n    var result = new ChandelierExit(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}