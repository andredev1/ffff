{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\n/**\n * Created by AAravindan on 5/8/16.\n */\n\n\"use strict\";\n\nexport class TrueRangeInput extends IndicatorInput {}\n;\nexport class TrueRange extends Indicator {\n  constructor(input) {\n    super(input);\n    var lows = input.low;\n    var highs = input.high;\n    var closes = input.close;\n    var format = this.format;\n\n    if (lows.length != highs.length) {\n      throw 'Inputs(low,high) not of equal size';\n    }\n\n    this.result = [];\n\n    this.generator = function* () {\n      var current = yield;\n      var previousClose, result;\n\n      while (true) {\n        if (previousClose === undefined) {\n          previousClose = current.close;\n          current = yield result;\n        }\n\n        result = Math.max(current.high - current.low, isNaN(Math.abs(current.high - previousClose)) ? 0 : Math.abs(current.high - previousClose), isNaN(Math.abs(current.low - previousClose)) ? 0 : Math.abs(current.low - previousClose));\n        previousClose = current.close;\n\n        if (result != undefined) {\n          result = format(result);\n        }\n\n        current = yield result;\n      }\n    }();\n\n    this.generator.next();\n    lows.forEach((tick, index) => {\n      var result = this.generator.next({\n        high: highs[index],\n        low: lows[index],\n        close: closes[index]\n      });\n\n      if (result.value != undefined) {\n        this.result.push(result.value);\n      }\n    });\n  }\n\n  nextValue(price) {\n    return this.generator.next(price).value;\n  }\n\n}\nTrueRange.calculate = truerange;\nexport function truerange(input) {\n  Indicator.reverseInputs(input);\n  var result = new TrueRange(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Downloads/ffff-main/node_modules/technicalindicators/lib/directionalmovement/TrueRange.js"],"names":["Indicator","IndicatorInput","TrueRangeInput","TrueRange","constructor","input","lows","low","highs","high","closes","close","format","length","result","generator","current","previousClose","undefined","Math","max","isNaN","abs","next","forEach","tick","index","value","push","nextValue","price","calculate","truerange","reverseInputs","reversedInput","reverse"],"mappings":"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","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class TrueRangeInput extends IndicatorInput {\n}\n;\nexport class TrueRange extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var current = yield;\n            var previousClose, result;\n            while (true) {\n                if (previousClose === undefined) {\n                    previousClose = current.close;\n                    current = yield result;\n                }\n                result = Math.max(current.high - current.low, isNaN(Math.abs(current.high - previousClose)) ? 0 : Math.abs(current.high - previousClose), isNaN(Math.abs(current.low - previousClose)) ? 0 : Math.abs(current.low - previousClose));\n                previousClose = current.close;\n                if (result != undefined) {\n                    result = format(result);\n                }\n                current = yield result;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nTrueRange.calculate = truerange;\nexport function truerange(input) {\n    Indicator.reverseInputs(input);\n    var result = new TrueRange(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}