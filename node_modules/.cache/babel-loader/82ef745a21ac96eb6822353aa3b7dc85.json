{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { ROC } from './ROC';\nexport class KSTInput extends IndicatorInput {}\nexport class KSTOutput {}\nexport class KST extends Indicator {\n  constructor(input) {\n    super(input);\n    let priceArray = input.values;\n    let rocPer1 = input.ROCPer1;\n    let rocPer2 = input.ROCPer2;\n    let rocPer3 = input.ROCPer3;\n    let rocPer4 = input.ROCPer4;\n    let smaPer1 = input.SMAROCPer1;\n    let smaPer2 = input.SMAROCPer2;\n    let smaPer3 = input.SMAROCPer3;\n    let smaPer4 = input.SMAROCPer4;\n    let signalPeriod = input.signalPeriod;\n    let roc1 = new ROC({\n      period: rocPer1,\n      values: []\n    });\n    let roc2 = new ROC({\n      period: rocPer2,\n      values: []\n    });\n    let roc3 = new ROC({\n      period: rocPer3,\n      values: []\n    });\n    let roc4 = new ROC({\n      period: rocPer4,\n      values: []\n    });\n    let sma1 = new SMA({\n      period: smaPer1,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let sma2 = new SMA({\n      period: smaPer2,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let sma3 = new SMA({\n      period: smaPer3,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let sma4 = new SMA({\n      period: smaPer4,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let signalSMA = new SMA({\n      period: signalPeriod,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    var format = this.format;\n    this.result = [];\n    let firstResult = Math.max(rocPer1 + smaPer1, rocPer2 + smaPer2, rocPer3 + smaPer3, rocPer4 + smaPer4);\n\n    this.generator = function* () {\n      let index = 1;\n      let tick = yield;\n      let kst;\n      let RCMA1, RCMA2, RCMA3, RCMA4, signal, result;\n\n      while (true) {\n        let roc1Result = roc1.nextValue(tick);\n        let roc2Result = roc2.nextValue(tick);\n        let roc3Result = roc3.nextValue(tick);\n        let roc4Result = roc4.nextValue(tick);\n        RCMA1 = roc1Result !== undefined ? sma1.nextValue(roc1Result) : undefined;\n        RCMA2 = roc2Result !== undefined ? sma2.nextValue(roc2Result) : undefined;\n        RCMA3 = roc3Result !== undefined ? sma3.nextValue(roc3Result) : undefined;\n        RCMA4 = roc4Result !== undefined ? sma4.nextValue(roc4Result) : undefined;\n\n        if (index < firstResult) {\n          index++;\n        } else {\n          kst = RCMA1 * 1 + RCMA2 * 2 + RCMA3 * 3 + RCMA4 * 4;\n        }\n\n        signal = kst !== undefined ? signalSMA.nextValue(kst) : undefined;\n        result = kst !== undefined ? {\n          kst: format(kst),\n          signal: signal ? format(signal) : undefined\n        } : undefined;\n        tick = yield result;\n      }\n    }();\n\n    this.generator.next();\n    priceArray.forEach(tick => {\n      let result = this.generator.next(tick);\n\n      if (result.value != undefined) {\n        this.result.push(result.value);\n      }\n    });\n  }\n\n  nextValue(price) {\n    let nextResult = this.generator.next(price);\n    if (nextResult.value != undefined) return nextResult.value;\n  }\n\n}\nKST.calculate = kst;\nexport function kst(input) {\n  Indicator.reverseInputs(input);\n  var result = new KST(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Documents/ffff/node_modules/technicalindicators/lib/momentum/KST.js"],"names":["Indicator","IndicatorInput","SMA","ROC","KSTInput","KSTOutput","KST","constructor","input","priceArray","values","rocPer1","ROCPer1","rocPer2","ROCPer2","rocPer3","ROCPer3","rocPer4","ROCPer4","smaPer1","SMAROCPer1","smaPer2","SMAROCPer2","smaPer3","SMAROCPer3","smaPer4","SMAROCPer4","signalPeriod","roc1","period","roc2","roc3","roc4","sma1","format","v","sma2","sma3","sma4","signalSMA","result","firstResult","Math","max","generator","index","tick","kst","RCMA1","RCMA2","RCMA3","RCMA4","signal","roc1Result","nextValue","roc2Result","roc3Result","roc4Result","undefined","next","forEach","value","push","price","nextResult","calculate","reverseInputs","reversedInput","reverse"],"mappings":"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","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { ROC } from './ROC';\nexport class KSTInput extends IndicatorInput {\n}\nexport class KSTOutput {\n}\nexport class KST extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let rocPer1 = input.ROCPer1;\n        let rocPer2 = input.ROCPer2;\n        let rocPer3 = input.ROCPer3;\n        let rocPer4 = input.ROCPer4;\n        let smaPer1 = input.SMAROCPer1;\n        let smaPer2 = input.SMAROCPer2;\n        let smaPer3 = input.SMAROCPer3;\n        let smaPer4 = input.SMAROCPer4;\n        let signalPeriod = input.signalPeriod;\n        let roc1 = new ROC({ period: rocPer1, values: [] });\n        let roc2 = new ROC({ period: rocPer2, values: [] });\n        let roc3 = new ROC({ period: rocPer3, values: [] });\n        let roc4 = new ROC({ period: rocPer4, values: [] });\n        let sma1 = new SMA({ period: smaPer1, values: [], format: (v) => { return v; } });\n        let sma2 = new SMA({ period: smaPer2, values: [], format: (v) => { return v; } });\n        let sma3 = new SMA({ period: smaPer3, values: [], format: (v) => { return v; } });\n        let sma4 = new SMA({ period: smaPer4, values: [], format: (v) => { return v; } });\n        let signalSMA = new SMA({ period: signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        let firstResult = Math.max(rocPer1 + smaPer1, rocPer2 + smaPer2, rocPer3 + smaPer3, rocPer4 + smaPer4);\n        this.generator = (function* () {\n            let index = 1;\n            let tick = yield;\n            let kst;\n            let RCMA1, RCMA2, RCMA3, RCMA4, signal, result;\n            while (true) {\n                let roc1Result = roc1.nextValue(tick);\n                let roc2Result = roc2.nextValue(tick);\n                let roc3Result = roc3.nextValue(tick);\n                let roc4Result = roc4.nextValue(tick);\n                RCMA1 = (roc1Result !== undefined) ? sma1.nextValue(roc1Result) : undefined;\n                RCMA2 = (roc2Result !== undefined) ? sma2.nextValue(roc2Result) : undefined;\n                RCMA3 = (roc3Result !== undefined) ? sma3.nextValue(roc3Result) : undefined;\n                RCMA4 = (roc4Result !== undefined) ? sma4.nextValue(roc4Result) : undefined;\n                if (index < firstResult) {\n                    index++;\n                }\n                else {\n                    kst = (RCMA1 * 1) + (RCMA2 * 2) + (RCMA3 * 3) + (RCMA4 * 4);\n                }\n                signal = (kst !== undefined) ? signalSMA.nextValue(kst) : undefined;\n                result = kst !== undefined ? {\n                    kst: format(kst),\n                    signal: signal ? format(signal) : undefined\n                } : undefined;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value != undefined)\n            return nextResult.value;\n    }\n    ;\n}\nKST.calculate = kst;\nexport function kst(input) {\n    Indicator.reverseInputs(input);\n    var result = new KST(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}