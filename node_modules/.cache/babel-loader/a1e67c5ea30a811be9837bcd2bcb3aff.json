{"ast":null,"code":"import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class MorningDojiStar extends CandlestickFinder {\n  constructor() {\n    super();\n    this.name = 'MorningDojiStar';\n    this.requiredCount = 3;\n  }\n\n  logic(data) {\n    let firstdaysOpen = data.open[0];\n    let firstdaysClose = data.close[0];\n    let firstdaysHigh = data.high[0];\n    let firstdaysLow = data.low[0];\n    let seconddaysOpen = data.open[1];\n    let seconddaysClose = data.close[1];\n    let seconddaysHigh = data.high[1];\n    let seconddaysLow = data.low[1];\n    let thirddaysOpen = data.open[2];\n    let thirddaysClose = data.close[2];\n    let thirddaysHigh = data.high[2];\n    let thirddaysLow = data.low[2];\n    let firstdaysMidpoint = (firstdaysOpen + firstdaysClose) / 2;\n    let isFirstBearish = firstdaysClose < firstdaysOpen;\n    let dojiExists = new Doji().hasPattern({\n      \"open\": [seconddaysOpen],\n      \"close\": [seconddaysClose],\n      \"high\": [seconddaysHigh],\n      \"low\": [seconddaysLow]\n    });\n    let isThirdBullish = thirddaysOpen < thirddaysClose;\n    let gapExists = seconddaysHigh < firstdaysLow && seconddaysLow < firstdaysLow && thirddaysOpen > seconddaysHigh && seconddaysClose < thirddaysOpen;\n    let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n    return isFirstBearish && dojiExists && isThirdBullish && gapExists && doesCloseAboveFirstMidpoint;\n  }\n\n}\nexport function morningdojistar(data) {\n  return new MorningDojiStar().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/Downloads/ffff-main/node_modules/technicalindicators/lib/candlestick/MorningDojiStar.js"],"names":["Doji","CandlestickFinder","MorningDojiStar","constructor","name","requiredCount","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","thirddaysHigh","thirddaysLow","firstdaysMidpoint","isFirstBearish","dojiExists","hasPattern","isThirdBullish","gapExists","doesCloseAboveFirstMidpoint","morningdojistar"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,eAAe,MAAMC,eAAN,SAA8BD,iBAA9B,CAAgD;AAC3DE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,iBAAZ;AACA,SAAKC,aAAL,GAAqB,CAArB;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIC,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,YAAY,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIC,cAAc,GAAGT,IAAI,CAACE,IAAL,CAAU,CAAV,CAArB;AACA,QAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAL,CAAW,CAAX,CAAtB;AACA,QAAIO,cAAc,GAAGX,IAAI,CAACM,IAAL,CAAU,CAAV,CAArB;AACA,QAAIM,aAAa,GAAGZ,IAAI,CAACQ,GAAL,CAAS,CAAT,CAApB;AACA,QAAIK,aAAa,GAAGb,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIY,cAAc,GAAGd,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIW,aAAa,GAAGf,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIU,YAAY,GAAGhB,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIS,iBAAiB,GAAI,CAAChB,aAAa,GAAGE,cAAjB,IAAmC,CAA5D;AACA,QAAIe,cAAc,GAAGf,cAAc,GAAGF,aAAtC;AACA,QAAIkB,UAAU,GAAG,IAAI1B,IAAJ,GAAW2B,UAAX,CAAsB;AACnC,cAAQ,CAACX,cAAD,CAD2B;AAEnC,eAAS,CAACC,eAAD,CAF0B;AAGnC,cAAQ,CAACC,cAAD,CAH2B;AAInC,aAAO,CAACC,aAAD;AAJ4B,KAAtB,CAAjB;AAMA,QAAIS,cAAc,GAAGR,aAAa,GAAGC,cAArC;AACA,QAAIQ,SAAS,GAAKX,cAAc,GAAGJ,YAAlB,IACZK,aAAa,GAAGL,YADJ,IAEZM,aAAa,GAAGF,cAFJ,IAGZD,eAAe,GAAGG,aAHvB;AAIA,QAAIU,2BAA2B,GAAGT,cAAc,GAAGG,iBAAnD;AACA,WAAQC,cAAc,IAAIC,UAAlB,IAAgCE,cAAhC,IAAkDC,SAAlD,IACJC,2BADJ;AAEH;;AAnC0D;AAqC/D,OAAO,SAASC,eAAT,CAAyBxB,IAAzB,EAA+B;AAClC,SAAO,IAAIL,eAAJ,GAAsByB,UAAtB,CAAiCpB,IAAjC,CAAP;AACH","sourcesContent":["import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class MorningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && dojiExists && isThirdBullish && gapExists &&\n            doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningdojistar(data) {\n    return new MorningDojiStar().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}