{"ast":null,"code":"import CandlestickFinder from './CandlestickFinder';\nexport default class DarkCloudCover extends CandlestickFinder {\n  constructor() {\n    super();\n    this.name = 'DarkCloudCover';\n    this.requiredCount = 2;\n  }\n\n  logic(data) {\n    let firstdaysOpen = data.open[0];\n    let firstdaysClose = data.close[0];\n    let firstdaysHigh = data.high[0];\n    let firstdaysLow = data.low[0];\n    let seconddaysOpen = data.open[1];\n    let seconddaysClose = data.close[1];\n    let seconddaysHigh = data.high[1];\n    let seconddaysLow = data.low[1];\n    let firstdayMidpoint = (firstdaysClose + firstdaysOpen) / 2;\n    let isFirstBullish = firstdaysClose > firstdaysOpen;\n    let isSecondBearish = seconddaysClose < seconddaysOpen;\n    let isDarkCloudPattern = seconddaysOpen > firstdaysHigh && seconddaysClose < firstdayMidpoint && seconddaysClose > firstdaysOpen;\n    return isFirstBullish && isSecondBearish && isDarkCloudPattern;\n  }\n\n}\nexport function darkcloudcover(data) {\n  return new DarkCloudCover().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/candlestick/DarkCloudCover.js"],"names":["CandlestickFinder","DarkCloudCover","constructor","name","requiredCount","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","firstdayMidpoint","isFirstBullish","isSecondBearish","isDarkCloudPattern","darkcloudcover","hasPattern"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,eAAe,MAAMC,cAAN,SAA6BD,iBAA7B,CAA+C;AAC1DE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,gBAAZ;AACA,SAAKC,aAAL,GAAqB,CAArB;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIC,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,YAAY,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIC,cAAc,GAAGT,IAAI,CAACE,IAAL,CAAU,CAAV,CAArB;AACA,QAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAL,CAAW,CAAX,CAAtB;AACA,QAAIO,cAAc,GAAGX,IAAI,CAACM,IAAL,CAAU,CAAV,CAArB;AACA,QAAIM,aAAa,GAAGZ,IAAI,CAACQ,GAAL,CAAS,CAAT,CAApB;AACA,QAAIK,gBAAgB,GAAI,CAACV,cAAc,GAAGF,aAAlB,IAAmC,CAA3D;AACA,QAAIa,cAAc,GAAGX,cAAc,GAAGF,aAAtC;AACA,QAAIc,eAAe,GAAGL,eAAe,GAAGD,cAAxC;AACA,QAAIO,kBAAkB,GAAKP,cAAc,GAAGJ,aAAlB,IACrBK,eAAe,GAAGG,gBADG,IAErBH,eAAe,GAAGT,aAFvB;AAGA,WAAQa,cAAc,IAAIC,eAAlB,IAAqCC,kBAA7C;AACH;;AAtByD;AAwB9D,OAAO,SAASC,cAAT,CAAwBjB,IAAxB,EAA8B;AACjC,SAAO,IAAIL,cAAJ,GAAqBuB,UAArB,CAAgClB,IAAhC,CAAP;AACH","sourcesContent":["import CandlestickFinder from './CandlestickFinder';\nexport default class DarkCloudCover extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'DarkCloudCover';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdayMidpoint = ((firstdaysClose + firstdaysOpen) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isDarkCloudPattern = ((seconddaysOpen > firstdaysHigh) &&\n            (seconddaysClose < firstdayMidpoint) &&\n            (seconddaysClose > firstdaysOpen));\n        return (isFirstBullish && isSecondBearish && isDarkCloudPattern);\n    }\n}\nexport function darkcloudcover(data) {\n    return new DarkCloudCover().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}