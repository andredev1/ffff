{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/ffff/src/App.js\",\n    _s = $RefreshSig$();\n\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { formatData, subtractHours } from \"./utils\";\nimport { formatmacdData } from \"./formatmacd\";\nimport \"./styles.css\";\nimport 'devextreme/dist/css/dx.light.css';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { macd, sma } from \"technicalindicators\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [currencies, setcurrencies] = useState([]);\n  const [pair, setpair] = useState(\"\");\n  const [price, setprice] = useState(\"0.00\"); //var [priceSMA, setpriceSMA] = useState(\"\");\n\n  const [priceOBV, setpriceOBV] = useState({});\n  const [pastData, setpastData] = useState({});\n  const [csvdata, setcsvdata] = useState({});\n  const ws = useRef(null);\n  var printarray = [];\n  var ssma = useState([]);\n  var macdarray = [];\n  const [macdarray2, setmacd2] = useState({});\n  const [macdarray3, setmacd3] = useState({});\n  const [refresh, setrefresh] = useState(0);\n  const [resolution, setresolution] = useState(60);\n  const opts = {\n    tooltips: {\n      intersect: true,\n      mode: \"index\"\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  let first = useRef(false);\n  const url = \"https://api.pro.coinbase.com\";\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n    let pairs = [];\n\n    const apiCall = async () => {\n      await fetch(url + \"/products\").then(res => res.json()).then(data => pairs = data);\n      let filtered = pairs.filter(pair => {\n        if (pair.quote_currency === \"USD\") {\n          return pair;\n        }\n      });\n      filtered = filtered.sort((a, b) => {\n        if (a.base_currency < b.base_currency) {\n          return -1;\n        }\n\n        if (a.base_currency > b.base_currency) {\n          return 1;\n        }\n\n        return 0;\n      });\n      setcurrencies(filtered);\n      first.current = true;\n    };\n\n    apiCall();\n  }, []);\n  let moment1 = new Date();\n  let newdate = subtractHours(moment1, \"05\");\n  let newdate2 = newdate.substr(0, 24) + 'z';\n\n  const fetchHistoricalData = async () => {\n    let dataArr = [];\n    let dataArr2 = [];\n    let historicalDataURL = `${url}/products/${pair}/candles?granularity=60`;\n    await fetch(historicalDataURL).then(res => res.json()).then(data => dataArr = data);\n\n    for (let i = 0; i < dataArr.length; i++) {\n      dataArr2.push(dataArr[i]);\n    }\n\n    let enddate = \"\";\n\n    for (let i = 1; i < 10; i++) {\n      moment1 = new Date();\n      let strhour = (i * 5).toString();\n\n      if (strhour.length == 1) {\n        strhour = \"0\" + strhour;\n      }\n\n      newdate = subtractHours(moment1, strhour);\n      newdate2 = newdate.substr(0, 24) + 'z';\n\n      if (enddate === \"\") {\n        enddate = subtractHours(moment1, \"00\");\n        enddate = enddate.substr(0, 24) + 'z';\n      }\n\n      historicalDataURL = `${url}/products/${pair}/candles?granularity=60&start=` + newdate2 + `&end=` + enddate;\n      enddate = newdate2;\n      await fetch(historicalDataURL).then(res => res.json()).then(data => dataArr = data);\n\n      for (let i = 0; i < dataArr.length; i++) {\n        dataArr2.push(dataArr[i]);\n      }\n    }\n\n    let dataArr3 = [];\n\n    for (let i = 0; i < resolution; i++) {\n      dataArr3.push(dataArr2[i]);\n    }\n\n    let formattedData = formatData(dataArr3);\n    setpastData(formattedData); // setpriceSMA(sma(pastData))\n    // setpriceOBV(macd(pastData))\n\n    let col4 = [];\n\n    for (let i = 0; i < dataArr3.length; i++) {\n      let val = dataArr3[i][4];\n      col4.push(val);\n    }\n\n    var MACD = require('technicalindicators').MACD;\n\n    var macdInput = {\n      values: col4,\n      fastPeriod: 12,\n      slowPeriod: 26,\n      signalPeriod: 9,\n      SimpleMAOscillator: false,\n      SimpleMASignal: false\n    };\n    var StochRSI;\n    macdarray = MACD.calculate(macdInput); //let stochRSI=StochRSI()\n\n    for (let i = 0; i < macdarray.length; i++) {\n      let date = new Date(dataArr3[i][0] * 1000);\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let second = date.getSeconds();\n      let milliseconds = date.getMilliseconds();\n      let day = date.getDate();\n      let month = date.getMonth() + 1;\n      let year = date.getFullYear();\n      let final = `${hour}:${minute}:${second}:${milliseconds}__${day}-${month}-${year}`;\n      macdarray[i][\"date\"] = final;\n      macdarray[i][\"col1\"] = dataArr3[i][2];\n      macdarray[i][\"col2\"] = dataArr3[i][3];\n      macdarray[i][\"col3\"] = dataArr3[i][4];\n      macdarray[i][\"col4\"] = dataArr3[i][5];\n    }\n\n    console.log(\"done\");\n    let macd = formatmacdData(macdarray);\n    setmacd3(macd);\n    setmacd2(macdarray);\n  };\n\n  useEffect(() => {\n    if (!first.current) {\n      return;\n    }\n\n    let msg = {\n      type: \"subscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let jsonMsg = JSON.stringify(msg);\n    ws.current.send(jsonMsg);\n    fetchHistoricalData();\n\n    ws.current.onmessage = e => {\n      let data = JSON.parse(e.data);\n\n      if (data.type !== \"ticker\") {\n        return;\n      }\n\n      if (data.product_id === pair) {\n        setprice(data.price);\n      }\n    };\n  }, [pair]);\n\n  const handleSelect = e => {\n    let unsubMsg = {\n      type: \"unsubscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let unsub = JSON.stringify(unsubMsg);\n    ws.current.send(unsub);\n    setpair(e.target.value);\n  };\n\n  const handleResolution = e => {\n    setresolution(Number(e.target.value));\n  };\n\n  let csv = [];\n\n  if (Object.keys(macdarray2).length > 0) {\n    csv.push( /*#__PURE__*/_jsxDEV(CSVLink, {\n      data: macdarray2,\n      children: \"Download CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 14\n    }, this));\n  }\n\n  useEffect(() => {\n    const refreshCall = () => {\n      if (pair !== \"\") {\n        fetchHistoricalData();\n      }\n\n      setTimeout(function () {\n        setrefresh(new Date().getTime());\n      }, 500000000000);\n    };\n\n    refreshCall();\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"currency\",\n      value: pair,\n      onChange: handleSelect,\n      children: currencies.map((cur, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cur.id,\n          children: cur.display_name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), csv, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), \"resolution\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: resolution,\n      onChange: handleResolution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      price: price,\n      data: pastData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      price: price,\n      data: macdarray3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), \"obv macd crossing slippage indicators\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dem/BlAxAy0tNK+xHjIX6yyZXuQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/andre/Documents/ffff/src/App.js"],"names":["React","useState","useEffect","useRef","Dashboard","formatData","subtractHours","formatmacdData","CSVLink","CSVDownload","macd","sma","moment","App","currencies","setcurrencies","pair","setpair","price","setprice","priceOBV","setpriceOBV","pastData","setpastData","csvdata","setcsvdata","ws","printarray","ssma","macdarray","macdarray2","setmacd2","macdarray3","setmacd3","refresh","setrefresh","resolution","setresolution","opts","tooltips","intersect","mode","responsive","maintainAspectRatio","first","url","current","WebSocket","pairs","apiCall","fetch","then","res","json","data","filtered","filter","quote_currency","sort","a","b","base_currency","moment1","Date","newdate","newdate2","substr","fetchHistoricalData","dataArr","dataArr2","historicalDataURL","i","length","push","enddate","strhour","toString","dataArr3","formattedData","col4","val","MACD","require","macdInput","values","fastPeriod","slowPeriod","signalPeriod","SimpleMAOscillator","SimpleMASignal","StochRSI","calculate","date","hour","getHours","minute","getMinutes","second","getSeconds","milliseconds","getMilliseconds","day","getDate","month","getMonth","year","getFullYear","final","console","log","msg","type","product_ids","channels","jsonMsg","JSON","stringify","send","onmessage","e","parse","product_id","handleSelect","unsubMsg","unsub","target","value","handleResolution","Number","csv","Object","keys","refreshCall","setTimeout","getTime","map","cur","idx","id","display_name"],"mappings":"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","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { formatData,subtractHours } from \"./utils\";\nimport { formatmacdData } from \"./formatmacd\";\nimport \"./styles.css\";\nimport 'devextreme/dist/css/dx.light.css';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { macd, sma } from \"technicalindicators\";\nimport moment from 'moment';\nexport default function App() {\n  const [currencies, setcurrencies] = useState([]);\n  const [pair, setpair] = useState(\"\");\n  const [price, setprice] = useState(\"0.00\");\n  //var [priceSMA, setpriceSMA] = useState(\"\");\n  const [priceOBV, setpriceOBV] = useState({});\n  const [pastData, setpastData] = useState({});\n  const [csvdata, setcsvdata] = useState({});\n  const ws = useRef(null);\n  var printarray=[];\n  var ssma=useState([]);\n  var macdarray=[];\n  const [macdarray2, setmacd2] = useState({});\n  const [macdarray3, setmacd3] = useState({});\n  const [refresh, setrefresh] = useState(0);\n  const [resolution, setresolution] = useState(60);\n  const opts = {\n    tooltips: {\n      intersect: true,\n      mode: \"index\"\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  let first = useRef(false);\n  const url = \"https://api.pro.coinbase.com\";\n\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    let pairs = [];\n\n    const apiCall = async () => {\n      await fetch(url + \"/products\")\n        .then((res) => res.json())\n        .then((data) => (pairs = data));\n      \n      let filtered = pairs.filter((pair) => {\n        if (pair.quote_currency === \"USD\") {\n          return pair;\n        }\n      });\n\n      filtered = filtered.sort((a, b) => {\n        if (a.base_currency < b.base_currency) {\n          return -1;\n        }\n        if (a.base_currency > b.base_currency) {\n          return 1;\n        }\n        return 0;\n      });\n\n      \n      setcurrencies(filtered);\n\n      first.current = true;\n    };\n\n    apiCall();\n  }, []);\n\n  let moment1=new Date();\n  let newdate = subtractHours(moment1,\"05\");\n  let newdate2=newdate.substr(0,24)+'z';\n  \n    const fetchHistoricalData = async () => {\n      let dataArr = [];\n      let dataArr2 = [];\n      let historicalDataURL = `${url}/products/${pair}/candles?granularity=60`;\n      await fetch(historicalDataURL)\n        .then((res) => res.json())\n        .then((data) => (dataArr = data));\n        for (let i=0;i<dataArr.length;i++){\n          dataArr2.push(dataArr[i]);\n       }\n       let enddate=\"\";\n       for (let i=1;i<10;i++){\n\n         moment1=new Date();\n         let strhour=(i*5).toString();\n         if(strhour.length==1){\n           strhour=\"0\"+strhour;\n         }\n         newdate = subtractHours(moment1,strhour);\n         newdate2=newdate.substr(0,24)+'z';\n        if(enddate===\"\"){\n          enddate = subtractHours(moment1,\"00\");\n          enddate = enddate.substr(0,24)+'z';\n        }\n\n      historicalDataURL = `${url}/products/${pair}/candles?granularity=60&start=`+newdate2+`&end=`+enddate;\n      enddate=newdate2;\n      await fetch(historicalDataURL)\n        .then((res) => res.json())\n        .then((data) => (dataArr = data));\n        for (let i=0;i<dataArr.length;i++){\n          dataArr2.push(dataArr[i]);\n       }\n      }\n      let dataArr3 = [];\n      for (let i=0;i<resolution;i++){\n        dataArr3.push(dataArr2[i]);\n      }\n      let formattedData = formatData(dataArr3);\n      \n      setpastData(formattedData);\n     // setpriceSMA(sma(pastData))\n     // setpriceOBV(macd(pastData))\n      \n     let col4 = [];\n     for (let i=0;i<dataArr3.length;i++){\n      let val = dataArr3[i][4];\n      col4.push(val);\n    }\n      \n      var MACD = require('technicalindicators').MACD;\n      var macdInput = {\n      values            : col4,\n      fastPeriod        : 12,\n      slowPeriod        : 26,\n      signalPeriod      :  9,\n      SimpleMAOscillator: false,\n      SimpleMASignal    : false\n    }\n\n    var StochRSI\n\nmacdarray=MACD.calculate(macdInput);\n//let stochRSI=StochRSI()\n\n\n\nfor (let i=0;i<macdarray.length;i++){\n  let date = new Date(dataArr3[i][0] * 1000);\n\n  let hour = date.getHours();\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  let milliseconds = date.getMilliseconds();\n\n  let day = date.getDate();\n  let month = date.getMonth() + 1;\n  let year = date.getFullYear();\n\n  let final = `${hour}:${minute}:${second}:${milliseconds}__${day}-${month}-${year}`;\n  macdarray[i][\"date\"]=final;\n  macdarray[i][\"col1\"]=dataArr3[i][2];\n  macdarray[i][\"col2\"]=dataArr3[i][3];\n  macdarray[i][\"col3\"]=dataArr3[i][4];\n  macdarray[i][\"col4\"]=dataArr3[i][5];\n}\nconsole.log(\"done\");\nlet macd=formatmacdData(macdarray);\nsetmacd3(macd)\nsetmacd2(macdarray)\n\n\n \n    };\n\n\n  useEffect(() => {\n    if (!first.current) {\n      \n      return;\n    }\n\n    \n    let msg = {\n      type: \"subscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let jsonMsg = JSON.stringify(msg);\n    ws.current.send(jsonMsg);\n\n\n\nfetchHistoricalData();\n\n    ws.current.onmessage = (e) => {\n      let data = JSON.parse(e.data);\n      if (data.type !== \"ticker\") {\n        return;\n      }\n\n      if (data.product_id === pair) {\n        setprice(data.price);\n      }\n    };\n  }, [pair]);\n\n  const handleSelect = (e) => {\n    let unsubMsg = {\n      type: \"unsubscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let unsub = JSON.stringify(unsubMsg);\n\n    ws.current.send(unsub);\n\n    setpair(e.target.value);\n  };\n  \n  const handleResolution = (e) => {\n    setresolution(Number(e.target.value));\n  };\n  \n  let csv=[];\n  if(Object.keys(macdarray2).length>0){\n    csv.push(<CSVLink data={macdarray2}>Download CSV</CSVLink>);\n  }\n\n  useEffect(() => {\n    \n    const refreshCall = () => {\n      if(pair!==\"\"){\n        fetchHistoricalData();\n      }\n      setTimeout(function(){ \n        \n        setrefresh((new Date()).getTime()); }\n        , 500000000000);\n    };\n\n    refreshCall();\n  }, [refresh]);\n\n\n  return (\n    <div className=\"container\">\n      {\n        <select name=\"currency\" value={pair} onChange={handleSelect}>\n          {currencies.map((cur, idx) => {\n            return (\n              <option key={idx} value={cur.id}>\n                {cur.display_name}\n              </option>\n            );\n          })}\n        </select>\n      }\n      \n      {csv}\n      <br></br>\n      <br></br>resolution<input value={resolution} onChange={handleResolution}></input>\n      <Dashboard price={price} data={pastData} />\n      <Dashboard price={price} data={macdarray3} />\n\n\n\n      obv macd crossing \n      slippage indicators\n      \n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}