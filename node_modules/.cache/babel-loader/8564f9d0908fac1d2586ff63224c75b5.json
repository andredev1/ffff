{"ast":null,"code":"import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHammerStick extends CandlestickFinder {\n  constructor() {\n    super();\n    this.name = 'BearishHammerStick';\n    this.requiredCount = 1;\n  }\n\n  logic(data) {\n    let daysOpen = data.open[0];\n    let daysClose = data.close[0];\n    let daysHigh = data.high[0];\n    let daysLow = data.low[0];\n    let isBearishHammer = daysOpen > daysClose;\n    isBearishHammer = isBearishHammer && this.approximateEqual(daysOpen, daysHigh);\n    isBearishHammer = isBearishHammer && daysOpen - daysClose <= 2 * (daysClose - daysLow);\n    return isBearishHammer;\n  }\n\n}\nexport function bearishhammerstick(data) {\n  return new BearishHammerStick().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/ffff/node_modules/technicalindicators/lib/candlestick/BearishHammerStick.js"],"names":["CandlestickFinder","BearishHammerStick","constructor","name","requiredCount","logic","data","daysOpen","open","daysClose","close","daysHigh","high","daysLow","low","isBearishHammer","approximateEqual","bearishhammerstick","hasPattern"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,eAAe,MAAMC,kBAAN,SAAiCD,iBAAjC,CAAmD;AAC9DE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,oBAAZ;AACA,SAAKC,aAAL,GAAqB,CAArB;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAAf;AACA,QAAIC,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAhB;AACA,QAAIC,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAAf;AACA,QAAIC,OAAO,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAd;AACA,QAAIC,eAAe,GAAGR,QAAQ,GAAGE,SAAjC;AACAM,IAAAA,eAAe,GAAGA,eAAe,IAAI,KAAKC,gBAAL,CAAsBT,QAAtB,EAAgCI,QAAhC,CAArC;AACAI,IAAAA,eAAe,GAAGA,eAAe,IAAKR,QAAQ,GAAGE,SAAZ,IAA0B,KAAKA,SAAS,GAAGI,OAAjB,CAA/D;AACA,WAAOE,eAAP;AACH;;AAf6D;AAiBlE,OAAO,SAASE,kBAAT,CAA4BX,IAA5B,EAAkC;AACrC,SAAO,IAAIL,kBAAJ,GAAyBiB,UAAzB,CAAoCZ,IAApC,CAAP;AACH","sourcesContent":["import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHammerStick extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishHammerStick';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBearishHammer = daysOpen > daysClose;\n        isBearishHammer = isBearishHammer && this.approximateEqual(daysOpen, daysHigh);\n        isBearishHammer = isBearishHammer && (daysOpen - daysClose) <= 2 * (daysClose - daysLow);\n        return isBearishHammer;\n    }\n}\nexport function bearishhammerstick(data) {\n    return new BearishHammerStick().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}