{"ast":null,"code":"/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from './SMA';\nimport { EMA } from './EMA';\nexport class MACDInput extends IndicatorInput {\n  constructor(values) {\n    super();\n    this.values = values;\n    this.SimpleMAOscillator = true;\n    this.SimpleMASignal = true;\n  }\n\n}\nexport class MACDOutput {}\nexport class MACD extends Indicator {\n  constructor(input) {\n    super(input);\n    var oscillatorMAtype = input.SimpleMAOscillator ? SMA : EMA;\n    var signalMAtype = input.SimpleMASignal ? SMA : EMA;\n    var fastMAProducer = new oscillatorMAtype({\n      period: input.fastPeriod,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    var slowMAProducer = new oscillatorMAtype({\n      period: input.slowPeriod,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    var signalMAProducer = new signalMAtype({\n      period: input.signalPeriod,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    var format = this.format;\n    this.result = [];\n\n    this.generator = function* () {\n      var index = 0;\n      var tick;\n      var MACD, signal, histogram, fast, slow;\n\n      while (true) {\n        if (index < input.slowPeriod) {\n          tick = yield;\n          fast = fastMAProducer.nextValue(tick);\n          slow = slowMAProducer.nextValue(tick);\n          index++;\n          continue;\n        }\n\n        if (fast && slow) {\n          //Just for typescript to be happy\n          MACD = fast - slow;\n          signal = signalMAProducer.nextValue(MACD);\n        }\n\n        histogram = MACD - signal;\n        tick = yield {\n          //fast : fast,\n          //slow : slow,\n          MACD: format(MACD),\n          signal: signal ? format(signal) : undefined,\n          histogram: isNaN(histogram) ? undefined : format(histogram)\n        };\n        fast = fastMAProducer.nextValue(tick);\n        slow = slowMAProducer.nextValue(tick);\n      }\n    }();\n\n    this.generator.next();\n    input.values.forEach(tick => {\n      var result = this.generator.next(tick);\n\n      if (result.value != undefined) {\n        this.result.push(result.value);\n      }\n    });\n  }\n\n  nextValue(price) {\n    var result = this.generator.next(price).value;\n    return result;\n  }\n\n}\nMACD.calculate = macd;\nexport function macd(input) {\n  Indicator.reverseInputs(input);\n  var result = new MACD(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Downloads/ffff-main/node_modules/technicalindicators/lib/moving_averages/MACD.js"],"names":["Indicator","IndicatorInput","SMA","EMA","MACDInput","constructor","values","SimpleMAOscillator","SimpleMASignal","MACDOutput","MACD","input","oscillatorMAtype","signalMAtype","fastMAProducer","period","fastPeriod","format","v","slowMAProducer","slowPeriod","signalMAProducer","signalPeriod","result","generator","index","tick","signal","histogram","fast","slow","nextValue","undefined","isNaN","next","forEach","value","push","price","calculate","macd","reverseInputs","reversedInput","reverse"],"mappings":"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","sourcesContent":["/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from './SMA';\nimport { EMA } from './EMA';\nexport class MACDInput extends IndicatorInput {\n    constructor(values) {\n        super();\n        this.values = values;\n        this.SimpleMAOscillator = true;\n        this.SimpleMASignal = true;\n    }\n}\nexport class MACDOutput {\n}\nexport class MACD extends Indicator {\n    constructor(input) {\n        super(input);\n        var oscillatorMAtype = input.SimpleMAOscillator ? SMA : EMA;\n        var signalMAtype = input.SimpleMASignal ? SMA : EMA;\n        var fastMAProducer = new oscillatorMAtype({ period: input.fastPeriod, values: [], format: (v) => { return v; } });\n        var slowMAProducer = new oscillatorMAtype({ period: input.slowPeriod, values: [], format: (v) => { return v; } });\n        var signalMAProducer = new signalMAtype({ period: input.signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        this.generator = (function* () {\n            var index = 0;\n            var tick;\n            var MACD, signal, histogram, fast, slow;\n            while (true) {\n                if (index < input.slowPeriod) {\n                    tick = yield;\n                    fast = fastMAProducer.nextValue(tick);\n                    slow = slowMAProducer.nextValue(tick);\n                    index++;\n                    continue;\n                }\n                if (fast && slow) { //Just for typescript to be happy\n                    MACD = fast - slow;\n                    signal = signalMAProducer.nextValue(MACD);\n                }\n                histogram = MACD - signal;\n                tick = yield ({\n                    //fast : fast,\n                    //slow : slow,\n                    MACD: format(MACD),\n                    signal: signal ? format(signal) : undefined,\n                    histogram: isNaN(histogram) ? undefined : format(histogram)\n                });\n                fast = fastMAProducer.nextValue(tick);\n                slow = slowMAProducer.nextValue(tick);\n            }\n        })();\n        this.generator.next();\n        input.values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        return result;\n    }\n    ;\n}\nMACD.calculate = macd;\nexport function macd(input) {\n    Indicator.reverseInputs(input);\n    var result = new MACD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}