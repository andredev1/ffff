{"ast":null,"code":"/**\n * Created by AAravindan on 5/9/16.\n */\n\"use strict\";\n\nimport { ROC } from './ROC.js';\nimport { EMA } from '../moving_averages/EMA.js';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class TRIXInput extends IndicatorInput {}\n;\nexport class TRIX extends Indicator {\n  constructor(input) {\n    super(input);\n    let priceArray = input.values;\n    let period = input.period;\n    let format = this.format;\n    let ema = new EMA({\n      period: period,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let emaOfema = new EMA({\n      period: period,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let emaOfemaOfema = new EMA({\n      period: period,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    let trixROC = new ROC({\n      period: 1,\n      values: [],\n      format: v => {\n        return v;\n      }\n    });\n    this.result = [];\n\n    this.generator = function* () {\n      let tick = yield;\n\n      while (true) {\n        let initialema = ema.nextValue(tick);\n        let smoothedResult = initialema ? emaOfema.nextValue(initialema) : undefined;\n        let doubleSmoothedResult = smoothedResult ? emaOfemaOfema.nextValue(smoothedResult) : undefined;\n        let result = doubleSmoothedResult ? trixROC.nextValue(doubleSmoothedResult) : undefined;\n        tick = yield result ? format(result) : undefined;\n      }\n    }();\n\n    this.generator.next();\n    priceArray.forEach(tick => {\n      let result = this.generator.next(tick);\n\n      if (result.value !== undefined) {\n        this.result.push(result.value);\n      }\n    });\n  }\n\n  nextValue(price) {\n    let nextResult = this.generator.next(price);\n    if (nextResult.value !== undefined) return nextResult.value;\n  }\n\n}\nTRIX.calculate = trix;\nexport function trix(input) {\n  Indicator.reverseInputs(input);\n  var result = new TRIX(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/momentum/TRIX.js"],"names":["ROC","EMA","Indicator","IndicatorInput","TRIXInput","TRIX","constructor","input","priceArray","values","period","format","ema","v","emaOfema","emaOfemaOfema","trixROC","result","generator","tick","initialema","nextValue","smoothedResult","undefined","doubleSmoothedResult","next","forEach","value","push","price","nextResult","calculate","trix","reverseInputs","reversedInput","reverse"],"mappings":"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","sourcesContent":["/**\n * Created by AAravindan on 5/9/16.\n */\n\"use strict\";\nimport { ROC } from './ROC.js';\nimport { EMA } from '../moving_averages/EMA.js';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class TRIXInput extends IndicatorInput {\n}\n;\nexport class TRIX extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let period = input.period;\n        let format = this.format;\n        let ema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfemaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let trixROC = new ROC({ period: 1, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            let tick = yield;\n            while (true) {\n                let initialema = ema.nextValue(tick);\n                let smoothedResult = initialema ? emaOfema.nextValue(initialema) : undefined;\n                let doubleSmoothedResult = smoothedResult ? emaOfemaOfema.nextValue(smoothedResult) : undefined;\n                let result = doubleSmoothedResult ? trixROC.nextValue(doubleSmoothedResult) : undefined;\n                tick = yield result ? format(result) : undefined;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nTRIX.calculate = trix;\nexport function trix(input) {\n    Indicator.reverseInputs(input);\n    var result = new TRIX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}