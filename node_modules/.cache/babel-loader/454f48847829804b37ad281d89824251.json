{"ast":null,"code":"import CandlestickFinder from './CandlestickFinder';\nexport default class PiercingLine extends CandlestickFinder {\n  constructor() {\n    super();\n    this.requiredCount = 2;\n    this.name = 'PiercingLine';\n  }\n\n  logic(data) {\n    let firstdaysOpen = data.open[0];\n    let firstdaysClose = data.close[0];\n    let firstdaysHigh = data.high[0];\n    let firstdaysLow = data.low[0];\n    let seconddaysOpen = data.open[1];\n    let seconddaysClose = data.close[1];\n    let seconddaysHigh = data.high[1];\n    let seconddaysLow = data.low[1];\n    let firstdaysMidpoint = (firstdaysOpen + firstdaysClose) / 2;\n    let isDowntrend = seconddaysLow < firstdaysLow;\n    let isFirstBearish = firstdaysClose < firstdaysOpen;\n    let isSecondBullish = seconddaysClose > seconddaysOpen;\n    let isPiercingLinePattern = firstdaysLow > seconddaysOpen && seconddaysClose > firstdaysMidpoint;\n    return isDowntrend && isFirstBearish && isPiercingLinePattern && isSecondBullish;\n  }\n\n}\nexport function piercingline(data) {\n  return new PiercingLine().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/candlestick/PiercingLine.js"],"names":["CandlestickFinder","PiercingLine","constructor","requiredCount","name","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","firstdaysMidpoint","isDowntrend","isFirstBearish","isSecondBullish","isPiercingLinePattern","piercingline","hasPattern"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,eAAe,MAAMC,YAAN,SAA2BD,iBAA3B,CAA6C;AACxDE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,IAAL,GAAY,cAAZ;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIC,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,YAAY,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIC,cAAc,GAAGT,IAAI,CAACE,IAAL,CAAU,CAAV,CAArB;AACA,QAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAL,CAAW,CAAX,CAAtB;AACA,QAAIO,cAAc,GAAGX,IAAI,CAACM,IAAL,CAAU,CAAV,CAArB;AACA,QAAIM,aAAa,GAAGZ,IAAI,CAACQ,GAAL,CAAS,CAAT,CAApB;AACA,QAAIK,iBAAiB,GAAI,CAACZ,aAAa,GAAGE,cAAjB,IAAmC,CAA5D;AACA,QAAIW,WAAW,GAAGF,aAAa,GAAGL,YAAlC;AACA,QAAIQ,cAAc,GAAGZ,cAAc,GAAGF,aAAtC;AACA,QAAIe,eAAe,GAAGN,eAAe,GAAGD,cAAxC;AACA,QAAIQ,qBAAqB,GAAKV,YAAY,GAAGE,cAAhB,IACxBC,eAAe,GAAGG,iBADvB;AAEA,WAAQC,WAAW,IAAIC,cAAf,IAAiCE,qBAAjC,IAA0DD,eAAlE;AACH;;AAtBuD;AAwB5D,OAAO,SAASE,YAAT,CAAsBlB,IAAtB,EAA4B;AAC/B,SAAO,IAAIL,YAAJ,GAAmBwB,UAAnB,CAA8BnB,IAA9B,CAAP;AACH","sourcesContent":["import CandlestickFinder from './CandlestickFinder';\nexport default class PiercingLine extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'PiercingLine';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isDowntrend = seconddaysLow < firstdaysLow;\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBullish = seconddaysClose > seconddaysOpen;\n        let isPiercingLinePattern = ((firstdaysLow > seconddaysOpen) &&\n            (seconddaysClose > firstdaysMidpoint));\n        return (isDowntrend && isFirstBearish && isPiercingLinePattern && isSecondBullish);\n    }\n}\nexport function piercingline(data) {\n    return new PiercingLine().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}