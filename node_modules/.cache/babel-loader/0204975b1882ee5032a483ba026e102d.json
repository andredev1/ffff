{"ast":null,"code":"/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */\nexport function fibonacciretracement(start, end) {\n  let levels = [0, 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6];\n  let retracements;\n\n  if (start < end) {\n    retracements = levels.map(function (level) {\n      let calculated = end - Math.abs(start - end) * level / 100;\n      return calculated > 0 ? calculated : 0;\n    });\n  } else {\n    retracements = levels.map(function (level) {\n      let calculated = end + Math.abs(start - end) * level / 100;\n      return calculated > 0 ? calculated : 0;\n    });\n  }\n\n  return retracements;\n}","map":{"version":3,"sources":["/home/andre/Documents/ffff/node_modules/technicalindicators/lib/drawingtools/fibonacci.js"],"names":["fibonacciretracement","start","end","levels","retracements","map","level","calculated","Math","abs"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqCC,GAArC,EAA0C;AAC7C,MAAIC,MAAM,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,GAAhC,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,KAA1D,CAAb;AACA,MAAIC,YAAJ;;AACA,MAAIH,KAAK,GAAGC,GAAZ,EAAiB;AACbE,IAAAA,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACvC,UAAIC,UAAU,GAAGL,GAAG,GAAGM,IAAI,CAACC,GAAL,CAASR,KAAK,GAAGC,GAAjB,IAAyBI,KAAzB,GAAkC,GAAzD;AACA,aAAOC,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,CAArC;AACH,KAHc,CAAf;AAIH,GALD,MAMK;AACDH,IAAAA,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACvC,UAAIC,UAAU,GAAGL,GAAG,GAAGM,IAAI,CAACC,GAAL,CAASR,KAAK,GAAGC,GAAjB,IAAyBI,KAAzB,GAAkC,GAAzD;AACA,aAAOC,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,CAArC;AACH,KAHc,CAAf;AAIH;;AACD,SAAOH,YAAP;AACH","sourcesContent":["/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */\nexport function fibonacciretracement(start, end) {\n    let levels = [0, 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6];\n    let retracements;\n    if (start < end) {\n        retracements = levels.map(function (level) {\n            let calculated = end - Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    else {\n        retracements = levels.map(function (level) {\n            let calculated = end + Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    return retracements;\n}\n"]},"metadata":{},"sourceType":"module"}