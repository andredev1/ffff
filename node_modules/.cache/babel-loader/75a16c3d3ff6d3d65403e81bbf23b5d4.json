{"ast":null,"code":"import CandlestickFinder from './CandlestickFinder';\nimport Doji from './Doji';\nexport default class AbandonedBaby extends CandlestickFinder {\n  constructor() {\n    super();\n    this.name = 'AbandonedBaby';\n    this.requiredCount = 3;\n  }\n\n  logic(data) {\n    let firstdaysOpen = data.open[0];\n    let firstdaysClose = data.close[0];\n    let firstdaysHigh = data.high[0];\n    let firstdaysLow = data.low[0];\n    let seconddaysOpen = data.open[1];\n    let seconddaysClose = data.close[1];\n    let seconddaysHigh = data.high[1];\n    let seconddaysLow = data.low[1];\n    let thirddaysOpen = data.open[2];\n    let thirddaysClose = data.close[2];\n    let thirddaysHigh = data.high[2];\n    let thirddaysLow = data.low[2];\n    let isFirstBearish = firstdaysClose < firstdaysOpen;\n    let dojiExists = new Doji().hasPattern({\n      \"open\": [seconddaysOpen],\n      \"close\": [seconddaysClose],\n      \"high\": [seconddaysHigh],\n      \"low\": [seconddaysLow]\n    });\n    let gapExists = seconddaysHigh < firstdaysLow && thirddaysLow > seconddaysHigh && thirddaysClose > thirddaysOpen;\n    let isThirdBullish = thirddaysHigh < firstdaysOpen;\n    return isFirstBearish && dojiExists && gapExists && isThirdBullish;\n  }\n\n}\nexport function abandonedbaby(data) {\n  return new AbandonedBaby().hasPattern(data);\n}","map":{"version":3,"sources":["/home/andre/Documents/ffff/node_modules/technicalindicators/lib/candlestick/AbandonedBaby.js"],"names":["CandlestickFinder","Doji","AbandonedBaby","constructor","name","requiredCount","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","thirddaysHigh","thirddaysLow","isFirstBearish","dojiExists","hasPattern","gapExists","isThirdBullish","abandonedbaby"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,eAAe,MAAMC,aAAN,SAA4BF,iBAA5B,CAA8C;AACzDG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,eAAZ;AACA,SAAKC,aAAL,GAAqB,CAArB;AACH;;AACDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIC,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIC,YAAY,GAAGP,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIC,cAAc,GAAGT,IAAI,CAACE,IAAL,CAAU,CAAV,CAArB;AACA,QAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAL,CAAW,CAAX,CAAtB;AACA,QAAIO,cAAc,GAAGX,IAAI,CAACM,IAAL,CAAU,CAAV,CAArB;AACA,QAAIM,aAAa,GAAGZ,IAAI,CAACQ,GAAL,CAAS,CAAT,CAApB;AACA,QAAIK,aAAa,GAAGb,IAAI,CAACE,IAAL,CAAU,CAAV,CAApB;AACA,QAAIY,cAAc,GAAGd,IAAI,CAACI,KAAL,CAAW,CAAX,CAArB;AACA,QAAIW,aAAa,GAAGf,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB;AACA,QAAIU,YAAY,GAAGhB,IAAI,CAACQ,GAAL,CAAS,CAAT,CAAnB;AACA,QAAIS,cAAc,GAAGd,cAAc,GAAGF,aAAtC;AACA,QAAIiB,UAAU,GAAG,IAAIxB,IAAJ,GAAWyB,UAAX,CAAsB;AACnC,cAAQ,CAACV,cAAD,CAD2B;AAEnC,eAAS,CAACC,eAAD,CAF0B;AAGnC,cAAQ,CAACC,cAAD,CAH2B;AAInC,aAAO,CAACC,aAAD;AAJ4B,KAAtB,CAAjB;AAMA,QAAIQ,SAAS,GAAKT,cAAc,GAAGJ,YAAlB,IACZS,YAAY,GAAGL,cADH,IAEZG,cAAc,GAAGD,aAFtB;AAGA,QAAIQ,cAAc,GAAIN,aAAa,GAAGd,aAAtC;AACA,WAAQgB,cAAc,IAAIC,UAAlB,IAAgCE,SAAhC,IAA6CC,cAArD;AACH;;AA/BwD;AAiC7D,OAAO,SAASC,aAAT,CAAuBtB,IAAvB,EAA6B;AAChC,SAAO,IAAIL,aAAJ,GAAoBwB,UAApB,CAA+BnB,IAA/B,CAAP;AACH","sourcesContent":["import CandlestickFinder from './CandlestickFinder';\nimport Doji from './Doji';\nexport default class AbandonedBaby extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'AbandonedBaby';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (thirddaysLow > seconddaysHigh) &&\n            (thirddaysClose > thirddaysOpen));\n        let isThirdBullish = (thirddaysHigh < firstdaysOpen);\n        return (isFirstBearish && dojiExists && gapExists && isThirdBullish);\n    }\n}\nexport function abandonedbaby(data) {\n    return new AbandonedBaby().hasPattern(data);\n}\n"]},"metadata":{},"sourceType":"module"}