{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/f/f/src/App.js\",\n    _s = $RefreshSig$();\n\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { formatData } from \"./utils\";\nimport { formatmacdData } from \"./formatmacd\";\nimport \"./styles.css\";\nimport 'devextreme/dist/css/dx.light.css';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { macd, sma } from \"technicalindicators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [currencies, setcurrencies] = useState([]);\n  const [pair, setpair] = useState(\"\");\n  const [price, setprice] = useState(\"0.00\"); //var [priceSMA, setpriceSMA] = useState(\"\");\n\n  const [priceOBV, setpriceOBV] = useState({});\n  const [pastData, setpastData] = useState({});\n  const [csvdata, setcsvdata] = useState({});\n  const ws = useRef(null);\n  var printarray = [];\n  var ssma = useState([]);\n  var macdarray = [];\n  const [macdarray2, setmacd2] = useState({});\n  const [macdarray3, setmacd3] = useState({});\n  const opts = {\n    tooltips: {\n      intersect: false,\n      mode: \"index\"\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  let first = useRef(false);\n  const url = \"https://api.pro.coinbase.com\";\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n    let pairs = [];\n\n    const apiCall = async () => {\n      await fetch(url + \"/products\").then(res => res.json()).then(data => pairs = data);\n      let filtered = pairs.filter(pair => {\n        if (pair.quote_currency === \"USD\") {\n          return pair;\n        }\n      });\n      filtered = filtered.sort((a, b) => {\n        if (a.base_currency < b.base_currency) {\n          return -1;\n        }\n\n        if (a.base_currency > b.base_currency) {\n          return 1;\n        }\n\n        return 0;\n      });\n      setcurrencies(filtered);\n      first.current = true;\n    };\n\n    apiCall();\n  }, []);\n  useEffect(() => {\n    if (!first.current) {\n      return;\n    }\n\n    let msg = {\n      type: \"subscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let jsonMsg = JSON.stringify(msg);\n    ws.current.send(jsonMsg);\n    let historicalDataURL = `${url}/products/${pair}/candles?granularity=1`;\n\n    const fetchHistoricalData = async () => {\n      let dataArr = [];\n      await fetch(historicalDataURL).then(res => res.json()).then(data => dataArr = data);\n      let formattedData = formatData(dataArr);\n      setpastData(formattedData); // setpriceSMA(sma(pastData))\n      // setpriceOBV(macd(pastData))\n\n      setcsvdata(dataArr);\n      let col2 = [];\n\n      for (let i = 0; i < dataArr.length; i++) {\n        let val = dataArr[i][2];\n        col2.push(val);\n      }\n\n      var MACD = require('technicalindicators').MACD;\n\n      var macdInput = {\n        values: col2,\n        fastPeriod: 12,\n        slowPeriod: 26,\n        signalPeriod: 9,\n        SimpleMAOscillator: false,\n        SimpleMASignal: false\n      };\n      macdarray = MACD.calculate(macdInput);\n\n      for (let i = 0; i < macdarray.length; i++) {\n        let date = new Date(dataArr[i][0] * 1000);\n        let hour = date.getHours();\n        let minute = date.getMinutes();\n        let second = date.getSeconds();\n        let milliseconds = date.getMilliseconds();\n        let day = date.getDate();\n        let month = date.getMonth() + 1;\n        let year = date.getFullYear();\n        let final = `${hour}:${minute}:${second}:${milliseconds}__${day}-${month}-${year}`;\n        macdarray[i][\"date\"] = final;\n        macdarray[i][\"closing\"] = dataArr[i][2];\n      }\n\n      console.log(\"done\");\n      let macd = formatmacdData(macdarray);\n      setmacd3(macd);\n    };\n\n    fetchHistoricalData();\n\n    ws.current.onmessage = e => {\n      let data = JSON.parse(e.data);\n\n      if (data.type !== \"ticker\") {\n        return;\n      }\n\n      if (data.product_id === pair) {\n        setprice(data.price);\n      }\n    };\n  }, [pair]);\n\n  const handleSelect = e => {\n    let unsubMsg = {\n      type: \"unsubscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let unsub = JSON.stringify(unsubMsg);\n    ws.current.send(unsub);\n    setpair(e.target.value);\n  };\n\n  let csv = [];\n\n  if (Object.keys(macdarray2).length > 0) {\n    csv.push( /*#__PURE__*/_jsxDEV(CSVLink, {\n      data: macdarray2,\n      children: \"Download CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 14\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"currency\",\n      value: pair,\n      onChange: handleSelect,\n      children: currencies.map((cur, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cur.id,\n          children: cur.display_name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), csv, /*#__PURE__*/_jsxDEV(Dashboard, {\n      price: price,\n      data: pastData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      price: price,\n      data: macdarray3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), \"obv macd crossing slippage indicators\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3RSnpbUeTWUmRJ6pxgOnKMOCqCo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/andre/Documents/f/f/src/App.js"],"names":["React","useState","useEffect","useRef","Dashboard","formatData","formatmacdData","CSVLink","CSVDownload","macd","sma","App","currencies","setcurrencies","pair","setpair","price","setprice","priceOBV","setpriceOBV","pastData","setpastData","csvdata","setcsvdata","ws","printarray","ssma","macdarray","macdarray2","setmacd2","macdarray3","setmacd3","opts","tooltips","intersect","mode","responsive","maintainAspectRatio","first","url","current","WebSocket","pairs","apiCall","fetch","then","res","json","data","filtered","filter","quote_currency","sort","a","b","base_currency","msg","type","product_ids","channels","jsonMsg","JSON","stringify","send","historicalDataURL","fetchHistoricalData","dataArr","formattedData","col2","i","length","val","push","MACD","require","macdInput","values","fastPeriod","slowPeriod","signalPeriod","SimpleMAOscillator","SimpleMASignal","calculate","date","Date","hour","getHours","minute","getMinutes","second","getSeconds","milliseconds","getMilliseconds","day","getDate","month","getMonth","year","getFullYear","final","console","log","onmessage","e","parse","product_id","handleSelect","unsubMsg","unsub","target","value","csv","Object","keys","map","cur","idx","id","display_name"],"mappings":"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","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { formatData } from \"./utils\";\nimport { formatmacdData } from \"./formatmacd\";\nimport \"./styles.css\";\nimport 'devextreme/dist/css/dx.light.css';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { macd, sma } from \"technicalindicators\";\n\nexport default function App() {\n  const [currencies, setcurrencies] = useState([]);\n  const [pair, setpair] = useState(\"\");\n  const [price, setprice] = useState(\"0.00\");\n  //var [priceSMA, setpriceSMA] = useState(\"\");\n  const [priceOBV, setpriceOBV] = useState({});\n  const [pastData, setpastData] = useState({});\n  const [csvdata, setcsvdata] = useState({});\n  const ws = useRef(null);\n  var printarray=[];\n  var ssma=useState([]);\n  var macdarray=[];\n  const [macdarray2, setmacd2] = useState({});\n  const [macdarray3, setmacd3] = useState({});\n  const opts = {\n    tooltips: {\n      intersect: false,\n      mode: \"index\"\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  let first = useRef(false);\n  const url = \"https://api.pro.coinbase.com\";\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    let pairs = [];\n\n    const apiCall = async () => {\n      await fetch(url + \"/products\")\n        .then((res) => res.json())\n        .then((data) => (pairs = data));\n      \n      let filtered = pairs.filter((pair) => {\n        if (pair.quote_currency === \"USD\") {\n          return pair;\n        }\n      });\n\n      filtered = filtered.sort((a, b) => {\n        if (a.base_currency < b.base_currency) {\n          return -1;\n        }\n        if (a.base_currency > b.base_currency) {\n          return 1;\n        }\n        return 0;\n      });\n\n      \n      setcurrencies(filtered);\n\n      first.current = true;\n    };\n\n    apiCall();\n  }, []);\n\n  useEffect(() => {\n    if (!first.current) {\n      \n      return;\n    }\n\n    \n    let msg = {\n      type: \"subscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let jsonMsg = JSON.stringify(msg);\n    ws.current.send(jsonMsg);\n\n\n\n\n    \n    let historicalDataURL = `${url}/products/${pair}/candles?granularity=1`;\n    const fetchHistoricalData = async () => {\n      let dataArr = [];\n      await fetch(historicalDataURL)\n        .then((res) => res.json())\n        .then((data) => (dataArr = data));\n      \n      let formattedData = formatData(dataArr);\n      \n      setpastData(formattedData);\n     // setpriceSMA(sma(pastData))\n     // setpriceOBV(macd(pastData))\n      setcsvdata(dataArr)\n     let col2 = [];\n     for (let i=0;i<dataArr.length;i++){\n      let val = dataArr[i][2];\n      col2.push(val);\n    }\n      \n      var MACD = require('technicalindicators').MACD;\n      var macdInput = {\n      values            : col2,\n      fastPeriod        : 12,\n      slowPeriod        : 26,\n      signalPeriod      :  9,\n      SimpleMAOscillator: false,\n      SimpleMASignal    : false\n    }\n\nmacdarray=MACD.calculate(macdInput);\n\n\n\nfor (let i=0;i<macdarray.length;i++){\n  let date = new Date(dataArr[i][0] * 1000);\n\n  let hour = date.getHours();\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  let milliseconds = date.getMilliseconds();\n\n  let day = date.getDate();\n  let month = date.getMonth() + 1;\n  let year = date.getFullYear();\n\n  let final = `${hour}:${minute}:${second}:${milliseconds}__${day}-${month}-${year}`;\n  macdarray[i][\"date\"]=final;\n  macdarray[i][\"closing\"]=dataArr[i][2];\n}\nconsole.log(\"done\");\nlet macd=formatmacdData(macdarray);\nsetmacd3(macd)\n\n\n\n \n    };\n\nfetchHistoricalData();\n\n    ws.current.onmessage = (e) => {\n      let data = JSON.parse(e.data);\n      if (data.type !== \"ticker\") {\n        return;\n      }\n\n      if (data.product_id === pair) {\n        setprice(data.price);\n      }\n    };\n  }, [pair]);\n\n  const handleSelect = (e) => {\n    let unsubMsg = {\n      type: \"unsubscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let unsub = JSON.stringify(unsubMsg);\n\n    ws.current.send(unsub);\n\n    setpair(e.target.value);\n  };\n  \n  \n  let csv=[];\n  if(Object.keys(macdarray2).length>0){\n    csv.push(<CSVLink data={macdarray2}>Download CSV</CSVLink>);\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      {\n        <select name=\"currency\" value={pair} onChange={handleSelect}>\n          {currencies.map((cur, idx) => {\n            return (\n              <option key={idx} value={cur.id}>\n                {cur.display_name}\n              </option>\n            );\n          })}\n        </select>\n      }\n      {csv}\n      <Dashboard price={price} data={pastData} />\n      <Dashboard price={price} data={macdarray3} />\n\n\n\n      obv macd crossing \n      slippage indicators\n      \n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}