{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/17/16.\n */\n\n\"use strict\";\n\nexport class OBVInput extends IndicatorInput {}\nexport class OBV extends Indicator {\n  constructor(input) {\n    super(input);\n    var closes = input.close;\n    var volumes = input.volume;\n    this.result = [];\n\n    this.generator = function* () {\n      var result = 0;\n      var tick;\n      var lastClose;\n      tick = yield;\n\n      if (tick.close && typeof tick.close === 'number') {\n        lastClose = tick.close;\n        tick = yield;\n      }\n\n      while (true) {\n        if (lastClose < tick.close) {\n          result = result + tick.volume;\n        } else if (tick.close < lastClose) {\n          result = result - tick.volume;\n        }\n\n        lastClose = tick.close;\n        tick = yield result;\n      }\n    }();\n\n    this.generator.next();\n    closes.forEach((close, index) => {\n      let tickInput = {\n        close: closes[index],\n        volume: volumes[index]\n      };\n      let result = this.generator.next(tickInput);\n\n      if (result.value != undefined) {\n        this.result.push(result.value);\n      }\n    });\n  }\n\n  nextValue(price) {\n    return this.generator.next(price).value;\n  }\n\n}\nOBV.calculate = obv;\nexport function obv(input) {\n  Indicator.reverseInputs(input);\n  var result = new OBV(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/volume/OBV.js"],"names":["Indicator","IndicatorInput","OBVInput","OBV","constructor","input","closes","close","volumes","volume","result","generator","tick","lastClose","next","forEach","index","tickInput","value","undefined","push","nextValue","price","calculate","obv","reverseInputs","reversedInput","reverse"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA;AACA;AACA;;AACA;;AACA,OAAO,MAAMC,QAAN,SAAuBD,cAAvB,CAAsC;AAE7C,OAAO,MAAME,GAAN,SAAkBH,SAAlB,CAA4B;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACE,KAAnB;AACA,QAAIC,OAAO,GAAGH,KAAK,CAACI,MAApB;AACA,SAAKC,MAAL,GAAc,EAAd;;AACA,SAAKC,SAAL,GAAkB,aAAa;AAC3B,UAAID,MAAM,GAAG,CAAb;AACA,UAAIE,IAAJ;AACA,UAAIC,SAAJ;AACAD,MAAAA,IAAI,GAAG,KAAP;;AACA,UAAIA,IAAI,CAACL,KAAL,IAAe,OAAOK,IAAI,CAACL,KAAZ,KAAsB,QAAzC,EAAoD;AAChDM,QAAAA,SAAS,GAAGD,IAAI,CAACL,KAAjB;AACAK,QAAAA,IAAI,GAAG,KAAP;AACH;;AACD,aAAO,IAAP,EAAa;AACT,YAAIC,SAAS,GAAGD,IAAI,CAACL,KAArB,EAA4B;AACxBG,UAAAA,MAAM,GAAGA,MAAM,GAAGE,IAAI,CAACH,MAAvB;AACH,SAFD,MAGK,IAAIG,IAAI,CAACL,KAAL,GAAaM,SAAjB,EAA4B;AAC7BH,UAAAA,MAAM,GAAGA,MAAM,GAAGE,IAAI,CAACH,MAAvB;AACH;;AACDI,QAAAA,SAAS,GAAGD,IAAI,CAACL,KAAjB;AACAK,QAAAA,IAAI,GAAG,MAAMF,MAAb;AACH;AACJ,KAnBgB,EAAjB;;AAoBA,SAAKC,SAAL,CAAeG,IAAf;AACAR,IAAAA,MAAM,CAACS,OAAP,CAAe,CAACR,KAAD,EAAQS,KAAR,KAAkB;AAC7B,UAAIC,SAAS,GAAG;AACZV,QAAAA,KAAK,EAAED,MAAM,CAACU,KAAD,CADD;AAEZP,QAAAA,MAAM,EAAED,OAAO,CAACQ,KAAD;AAFH,OAAhB;AAIA,UAAIN,MAAM,GAAG,KAAKC,SAAL,CAAeG,IAAf,CAAoBG,SAApB,CAAb;;AACA,UAAIP,MAAM,CAACQ,KAAP,IAAgBC,SAApB,EAA+B;AAC3B,aAAKT,MAAL,CAAYU,IAAZ,CAAiBV,MAAM,CAACQ,KAAxB;AACH;AACJ,KATD;AAUH;;AACDG,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,WAAO,KAAKX,SAAL,CAAeG,IAAf,CAAoBQ,KAApB,EAA2BJ,KAAlC;AACH;;AAxC8B;AA2CnCf,GAAG,CAACoB,SAAJ,GAAgBC,GAAhB;AACA,OAAO,SAASA,GAAT,CAAanB,KAAb,EAAoB;AACvBL,EAAAA,SAAS,CAACyB,aAAV,CAAwBpB,KAAxB;AACA,MAAIK,MAAM,GAAG,IAAIP,GAAJ,CAAQE,KAAR,EAAeK,MAA5B;;AACA,MAAIL,KAAK,CAACqB,aAAV,EAAyB;AACrBhB,IAAAA,MAAM,CAACiB,OAAP;AACH;;AACD3B,EAAAA,SAAS,CAACyB,aAAV,CAAwBpB,KAAxB;AACA,SAAOK,MAAP;AACH;AACD","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/17/16.\n */\n\"use strict\";\nexport class OBVInput extends IndicatorInput {\n}\nexport class OBV extends Indicator {\n    constructor(input) {\n        super(input);\n        var closes = input.close;\n        var volumes = input.volume;\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            var lastClose;\n            tick = yield;\n            if (tick.close && (typeof tick.close === 'number')) {\n                lastClose = tick.close;\n                tick = yield;\n            }\n            while (true) {\n                if (lastClose < tick.close) {\n                    result = result + tick.volume;\n                }\n                else if (tick.close < lastClose) {\n                    result = result - tick.volume;\n                }\n                lastClose = tick.close;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        closes.forEach((close, index) => {\n            let tickInput = {\n                close: closes[index],\n                volume: volumes[index]\n            };\n            let result = this.generator.next(tickInput);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nOBV.calculate = obv;\nexport function obv(input) {\n    Indicator.reverseInputs(input);\n    var result = new OBV(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}