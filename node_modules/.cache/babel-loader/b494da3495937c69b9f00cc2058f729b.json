{"ast":null,"code":"import { CandleList } from '../StockData';\n/**\n * Created by AAravindan on 5/4/16.\n */\n\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class HeikinAshiInput extends IndicatorInput {}\nexport class HeikinAshi extends Indicator {\n  constructor(input) {\n    super(input);\n    var format = this.format;\n    this.result = new CandleList();\n    let lastOpen = null;\n    let lastHigh = 0;\n    let lastLow = Infinity;\n    let lastClose = 0;\n    let lastVolume = 0;\n    let lastTimestamp = 0;\n\n    this.generator = function* () {\n      let candleData = yield;\n      let calculated = null;\n\n      while (true) {\n        if (lastOpen === null) {\n          lastOpen = (candleData.close + candleData.open) / 2;\n          lastHigh = candleData.high;\n          lastLow = candleData.low;\n          lastClose = (candleData.close + candleData.open + candleData.high + candleData.low) / 4;\n          lastVolume = candleData.volume || 0;\n          lastTimestamp = candleData.timestamp || 0;\n          calculated = {\n            open: lastOpen,\n            high: lastHigh,\n            low: lastLow,\n            close: lastClose,\n            volume: candleData.volume || 0,\n            timestamp: candleData.timestamp || 0\n          };\n        } else {\n          let newClose = (candleData.close + candleData.open + candleData.high + candleData.low) / 4;\n          let newOpen = (lastOpen + lastClose) / 2;\n          let newHigh = Math.max(newOpen, newClose, candleData.high);\n          let newLow = Math.min(candleData.low, newOpen, newClose);\n          calculated = {\n            close: newClose,\n            open: newOpen,\n            high: newHigh,\n            low: newLow,\n            volume: candleData.volume || 0,\n            timestamp: candleData.timestamp || 0\n          };\n          lastClose = newClose;\n          lastOpen = newOpen;\n          lastHigh = newHigh;\n          lastLow = newLow;\n        }\n\n        candleData = yield calculated;\n      }\n    }();\n\n    this.generator.next();\n    input.low.forEach((tick, index) => {\n      var result = this.generator.next({\n        open: input.open[index],\n        high: input.high[index],\n        low: input.low[index],\n        close: input.close[index],\n        volume: input.volume ? input.volume[index] : input.volume,\n        timestamp: input.timestamp ? input.timestamp[index] : input.timestamp\n      });\n\n      if (result.value) {\n        this.result.open.push(result.value.open);\n        this.result.high.push(result.value.high);\n        this.result.low.push(result.value.low);\n        this.result.close.push(result.value.close);\n        this.result.volume.push(result.value.volume);\n        this.result.timestamp.push(result.value.timestamp);\n      }\n    });\n  }\n\n  nextValue(price) {\n    var result = this.generator.next(price).value;\n    return result;\n  }\n\n}\nHeikinAshi.calculate = heikinashi;\nexport function heikinashi(input) {\n  Indicator.reverseInputs(input);\n  var result = new HeikinAshi(input).result;\n\n  if (input.reversedInput) {\n    result.open.reverse();\n    result.high.reverse();\n    result.low.reverse();\n    result.close.reverse();\n    result.volume.reverse();\n    result.timestamp.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Downloads/ffff-main/node_modules/technicalindicators/lib/chart_types/HeikinAshi.js"],"names":["CandleList","Indicator","IndicatorInput","HeikinAshiInput","HeikinAshi","constructor","input","format","result","lastOpen","lastHigh","lastLow","Infinity","lastClose","lastVolume","lastTimestamp","generator","candleData","calculated","close","open","high","low","volume","timestamp","newClose","newOpen","newHigh","Math","max","newLow","min","next","forEach","tick","index","value","push","nextValue","price","calculate","heikinashi","reverseInputs","reversedInput","reverse"],"mappings":"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","sourcesContent":["import { CandleList } from '../StockData';\n/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class HeikinAshiInput extends IndicatorInput {\n}\nexport class HeikinAshi extends Indicator {\n    constructor(input) {\n        super(input);\n        var format = this.format;\n        this.result = new CandleList();\n        let lastOpen = null;\n        let lastHigh = 0;\n        let lastLow = Infinity;\n        let lastClose = 0;\n        let lastVolume = 0;\n        let lastTimestamp = 0;\n        this.generator = (function* () {\n            let candleData = yield;\n            let calculated = null;\n            while (true) {\n                if (lastOpen === null) {\n                    lastOpen = (candleData.close + candleData.open) / 2;\n                    lastHigh = candleData.high;\n                    lastLow = candleData.low;\n                    lastClose = (candleData.close + candleData.open + candleData.high + candleData.low) / 4;\n                    lastVolume = (candleData.volume || 0);\n                    lastTimestamp = (candleData.timestamp || 0);\n                    calculated = {\n                        open: lastOpen,\n                        high: lastHigh,\n                        low: lastLow,\n                        close: lastClose,\n                        volume: candleData.volume || 0,\n                        timestamp: (candleData.timestamp || 0)\n                    };\n                }\n                else {\n                    let newClose = (candleData.close + candleData.open + candleData.high + candleData.low) / 4;\n                    let newOpen = (lastOpen + lastClose) / 2;\n                    let newHigh = Math.max(newOpen, newClose, candleData.high);\n                    let newLow = Math.min(candleData.low, newOpen, newClose);\n                    calculated = {\n                        close: newClose,\n                        open: newOpen,\n                        high: newHigh,\n                        low: newLow,\n                        volume: (candleData.volume || 0),\n                        timestamp: (candleData.timestamp || 0)\n                    };\n                    lastClose = newClose;\n                    lastOpen = newOpen;\n                    lastHigh = newHigh;\n                    lastLow = newLow;\n                }\n                candleData = yield calculated;\n            }\n        })();\n        this.generator.next();\n        input.low.forEach((tick, index) => {\n            var result = this.generator.next({\n                open: input.open[index],\n                high: input.high[index],\n                low: input.low[index],\n                close: input.close[index],\n                volume: input.volume ? input.volume[index] : input.volume,\n                timestamp: input.timestamp ? input.timestamp[index] : input.timestamp\n            });\n            if (result.value) {\n                this.result.open.push(result.value.open);\n                this.result.high.push(result.value.high);\n                this.result.low.push(result.value.low);\n                this.result.close.push(result.value.close);\n                this.result.volume.push(result.value.volume);\n                this.result.timestamp.push(result.value.timestamp);\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        return result;\n    }\n    ;\n}\nHeikinAshi.calculate = heikinashi;\nexport function heikinashi(input) {\n    Indicator.reverseInputs(input);\n    var result = new HeikinAshi(input).result;\n    if (input.reversedInput) {\n        result.open.reverse();\n        result.high.reverse();\n        result.low.reverse();\n        result.close.reverse();\n        result.volume.reverse();\n        result.timestamp.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}