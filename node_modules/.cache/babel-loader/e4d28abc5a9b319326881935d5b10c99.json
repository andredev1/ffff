{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ROCInput extends IndicatorInput {}\nexport class ROC extends Indicator {\n  constructor(input) {\n    super(input);\n    var period = input.period;\n    var priceArray = input.values;\n    this.result = [];\n\n    this.generator = function* () {\n      let index = 1;\n      var pastPeriods = new LinkedList(period);\n      ;\n      var tick = yield;\n      var roc;\n\n      while (true) {\n        pastPeriods.push(tick);\n\n        if (index < period) {\n          index++;\n        } else {\n          roc = (tick - pastPeriods.lastShift) / pastPeriods.lastShift * 100;\n        }\n\n        tick = yield roc;\n      }\n    }();\n\n    this.generator.next();\n    priceArray.forEach(tick => {\n      var result = this.generator.next(tick);\n\n      if (result.value != undefined && !isNaN(result.value)) {\n        this.result.push(this.format(result.value));\n      }\n    });\n  }\n\n  nextValue(price) {\n    var nextResult = this.generator.next(price);\n\n    if (nextResult.value != undefined && !isNaN(nextResult.value)) {\n      return this.format(nextResult.value);\n    }\n  }\n\n}\nROC.calculate = roc;\n;\nexport function roc(input) {\n  Indicator.reverseInputs(input);\n  var result = new ROC(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Documents/ffff/node_modules/technicalindicators/lib/momentum/ROC.js"],"names":["Indicator","IndicatorInput","LinkedList","ROCInput","ROC","constructor","input","period","priceArray","values","result","generator","index","pastPeriods","tick","roc","push","lastShift","next","forEach","value","undefined","isNaN","format","nextValue","price","nextResult","calculate","reverseInputs","reversedInput","reverse"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,MAAMC,QAAN,SAAuBF,cAAvB,CAAsC;AAE7C,OAAO,MAAMG,GAAN,SAAkBJ,SAAlB,CAA4B;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,QAAIC,UAAU,GAAGF,KAAK,CAACG,MAAvB;AACA,SAAKC,MAAL,GAAc,EAAd;;AACA,SAAKC,SAAL,GAAkB,aAAa;AAC3B,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,WAAW,GAAG,IAAIX,UAAJ,CAAeK,MAAf,CAAlB;AACA;AACA,UAAIO,IAAI,GAAG,KAAX;AACA,UAAIC,GAAJ;;AACA,aAAO,IAAP,EAAa;AACTF,QAAAA,WAAW,CAACG,IAAZ,CAAiBF,IAAjB;;AACA,YAAIF,KAAK,GAAGL,MAAZ,EAAoB;AAChBK,UAAAA,KAAK;AACR,SAFD,MAGK;AACDG,UAAAA,GAAG,GAAI,CAACD,IAAI,GAAGD,WAAW,CAACI,SAApB,IAAkCJ,WAAW,CAACI,SAA/C,GAA6D,GAAnE;AACH;;AACDH,QAAAA,IAAI,GAAG,MAAMC,GAAb;AACH;AACJ,KAhBgB,EAAjB;;AAiBA,SAAKJ,SAAL,CAAeO,IAAf;AACAV,IAAAA,UAAU,CAACW,OAAX,CAAoBL,IAAD,IAAU;AACzB,UAAIJ,MAAM,GAAG,KAAKC,SAAL,CAAeO,IAAf,CAAoBJ,IAApB,CAAb;;AACA,UAAIJ,MAAM,CAACU,KAAP,IAAgBC,SAAhB,IAA8B,CAACC,KAAK,CAACZ,MAAM,CAACU,KAAR,CAAxC,EAAyD;AACrD,aAAKV,MAAL,CAAYM,IAAZ,CAAiB,KAAKO,MAAL,CAAYb,MAAM,CAACU,KAAnB,CAAjB;AACH;AACJ,KALD;AAMH;;AACDI,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,QAAIC,UAAU,GAAG,KAAKf,SAAL,CAAeO,IAAf,CAAoBO,KAApB,CAAjB;;AACA,QAAIC,UAAU,CAACN,KAAX,IAAoBC,SAApB,IAAkC,CAACC,KAAK,CAACI,UAAU,CAACN,KAAZ,CAA5C,EAAiE;AAC7D,aAAO,KAAKG,MAAL,CAAYG,UAAU,CAACN,KAAvB,CAAP;AACH;AACJ;;AApC8B;AAuCnChB,GAAG,CAACuB,SAAJ,GAAgBZ,GAAhB;AACA;AACA,OAAO,SAASA,GAAT,CAAaT,KAAb,EAAoB;AACvBN,EAAAA,SAAS,CAAC4B,aAAV,CAAwBtB,KAAxB;AACA,MAAII,MAAM,GAAG,IAAIN,GAAJ,CAAQE,KAAR,EAAeI,MAA5B;;AACA,MAAIJ,KAAK,CAACuB,aAAV,EAAyB;AACrBnB,IAAAA,MAAM,CAACoB,OAAP;AACH;;AACD9B,EAAAA,SAAS,CAAC4B,aAAV,CAAwBtB,KAAxB;AACA,SAAOI,MAAP;AACH;AACD","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ROCInput extends IndicatorInput {\n}\nexport class ROC extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let index = 1;\n            var pastPeriods = new LinkedList(period);\n            ;\n            var tick = yield;\n            var roc;\n            while (true) {\n                pastPeriods.push(tick);\n                if (index < period) {\n                    index++;\n                }\n                else {\n                    roc = ((tick - pastPeriods.lastShift) / (pastPeriods.lastShift)) * 100;\n                }\n                tick = yield roc;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined && (!isNaN(result.value))) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value != undefined && (!isNaN(nextResult.value))) {\n            return this.format(nextResult.value);\n        }\n    }\n    ;\n}\nROC.calculate = roc;\n;\nexport function roc(input) {\n    Indicator.reverseInputs(input);\n    var result = new ROC(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}