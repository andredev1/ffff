{"ast":null,"code":"/**\n * Created by AAravindan on 5/7/16.\n */\nimport { LinkedList } from './LinkedList';\nexport default class FixedSizeLinkedList extends LinkedList {\n  constructor(size, maintainHigh, maintainLow, maintainSum) {\n    super();\n    this.size = size;\n    this.maintainHigh = maintainHigh;\n    this.maintainLow = maintainLow;\n    this.maintainSum = maintainSum;\n    this.totalPushed = 0;\n    this.periodHigh = 0;\n    this.periodLow = Infinity;\n    this.periodSum = 0;\n\n    if (!size || typeof size !== 'number') {\n      throw 'Size required and should be a number.';\n    }\n\n    this._push = this.push;\n\n    this.push = function (data) {\n      this.add(data);\n      this.totalPushed++;\n    };\n  }\n\n  add(data) {\n    if (this.length === this.size) {\n      this.lastShift = this.shift();\n\n      this._push(data); //TODO: FInd a better way\n\n\n      if (this.maintainHigh) if (this.lastShift == this.periodHigh) this.calculatePeriodHigh();\n      if (this.maintainLow) if (this.lastShift == this.periodLow) this.calculatePeriodLow();\n\n      if (this.maintainSum) {\n        this.periodSum = this.periodSum - this.lastShift;\n      }\n    } else {\n      this._push(data);\n    } //TODO: FInd a better way\n\n\n    if (this.maintainHigh) if (this.periodHigh <= data) this.periodHigh = data;\n    if (this.maintainLow) if (this.periodLow >= data) this.periodLow = data;\n\n    if (this.maintainSum) {\n      this.periodSum = this.periodSum + data;\n    }\n  }\n\n  *iterator() {\n    this.resetCursor();\n\n    while (this.next()) {\n      yield this.current;\n    }\n  }\n\n  calculatePeriodHigh() {\n    this.resetCursor();\n    if (this.next()) this.periodHigh = this.current;\n\n    while (this.next()) {\n      if (this.periodHigh <= this.current) {\n        this.periodHigh = this.current;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  calculatePeriodLow() {\n    this.resetCursor();\n    if (this.next()) this.periodLow = this.current;\n\n    while (this.next()) {\n      if (this.periodLow >= this.current) {\n        this.periodLow = this.current;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/Utils/FixedSizeLinkedList.js"],"names":["LinkedList","FixedSizeLinkedList","constructor","size","maintainHigh","maintainLow","maintainSum","totalPushed","periodHigh","periodLow","Infinity","periodSum","_push","push","data","add","length","lastShift","shift","calculatePeriodHigh","calculatePeriodLow","iterator","resetCursor","next","current"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,cAA3B;AACA,eAAe,MAAMC,mBAAN,SAAkCD,UAAlC,CAA6C;AACxDE,EAAAA,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqBC,WAArB,EAAkCC,WAAlC,EAA+C;AACtD;AACA,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,SAAL,GAAiBC,QAAjB;AACA,SAAKC,SAAL,GAAiB,CAAjB;;AACA,QAAI,CAACR,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACnC,YAAO,uCAAP;AACH;;AACD,SAAKS,KAAL,GAAa,KAAKC,IAAlB;;AACA,SAAKA,IAAL,GAAY,UAAUC,IAAV,EAAgB;AACxB,WAAKC,GAAL,CAASD,IAAT;AACA,WAAKP,WAAL;AACH,KAHD;AAIH;;AACDQ,EAAAA,GAAG,CAACD,IAAD,EAAO;AACN,QAAI,KAAKE,MAAL,KAAgB,KAAKb,IAAzB,EAA+B;AAC3B,WAAKc,SAAL,GAAiB,KAAKC,KAAL,EAAjB;;AACA,WAAKN,KAAL,CAAWE,IAAX,EAF2B,CAG3B;;;AACA,UAAI,KAAKV,YAAT,EACI,IAAI,KAAKa,SAAL,IAAkB,KAAKT,UAA3B,EACI,KAAKW,mBAAL;AACR,UAAI,KAAKd,WAAT,EACI,IAAI,KAAKY,SAAL,IAAkB,KAAKR,SAA3B,EACI,KAAKW,kBAAL;;AACR,UAAI,KAAKd,WAAT,EAAsB;AAClB,aAAKK,SAAL,GAAiB,KAAKA,SAAL,GAAiB,KAAKM,SAAvC;AACH;AACJ,KAbD,MAcK;AACD,WAAKL,KAAL,CAAWE,IAAX;AACH,KAjBK,CAkBN;;;AACA,QAAI,KAAKV,YAAT,EACI,IAAI,KAAKI,UAAL,IAAmBM,IAAvB,EACK,KAAKN,UAAL,GAAkBM,IAAnB;AACR,QAAI,KAAKT,WAAT,EACI,IAAI,KAAKI,SAAL,IAAkBK,IAAtB,EACK,KAAKL,SAAL,GAAiBK,IAAlB;;AACR,QAAI,KAAKR,WAAT,EAAsB;AAClB,WAAKK,SAAL,GAAiB,KAAKA,SAAL,GAAiBG,IAAlC;AACH;AACJ;;AACQ,GAARO,QAAQ,GAAG;AACR,SAAKC,WAAL;;AACA,WAAO,KAAKC,IAAL,EAAP,EAAoB;AAChB,YAAM,KAAKC,OAAX;AACH;AACJ;;AACDL,EAAAA,mBAAmB,GAAG;AAClB,SAAKG,WAAL;AACA,QAAI,KAAKC,IAAL,EAAJ,EACI,KAAKf,UAAL,GAAkB,KAAKgB,OAAvB;;AACJ,WAAO,KAAKD,IAAL,EAAP,EAAoB;AAChB,UAAI,KAAKf,UAAL,IAAmB,KAAKgB,OAA5B,EAAqC;AACjC,aAAKhB,UAAL,GAAkB,KAAKgB,OAAvB;AACH;;AACD;AACH;;AACD;AACH;;AACDJ,EAAAA,kBAAkB,GAAG;AACjB,SAAKE,WAAL;AACA,QAAI,KAAKC,IAAL,EAAJ,EACI,KAAKd,SAAL,GAAiB,KAAKe,OAAtB;;AACJ,WAAO,KAAKD,IAAL,EAAP,EAAoB;AAChB,UAAI,KAAKd,SAAL,IAAkB,KAAKe,OAA3B,EAAoC;AAChC,aAAKf,SAAL,GAAiB,KAAKe,OAAtB;AACH;;AACD;AACH;;AACD;AACH;;AA9EuD","sourcesContent":["/**\n * Created by AAravindan on 5/7/16.\n */\nimport { LinkedList } from './LinkedList';\nexport default class FixedSizeLinkedList extends LinkedList {\n    constructor(size, maintainHigh, maintainLow, maintainSum) {\n        super();\n        this.size = size;\n        this.maintainHigh = maintainHigh;\n        this.maintainLow = maintainLow;\n        this.maintainSum = maintainSum;\n        this.totalPushed = 0;\n        this.periodHigh = 0;\n        this.periodLow = Infinity;\n        this.periodSum = 0;\n        if (!size || typeof size !== 'number') {\n            throw ('Size required and should be a number.');\n        }\n        this._push = this.push;\n        this.push = function (data) {\n            this.add(data);\n            this.totalPushed++;\n        };\n    }\n    add(data) {\n        if (this.length === this.size) {\n            this.lastShift = this.shift();\n            this._push(data);\n            //TODO: FInd a better way\n            if (this.maintainHigh)\n                if (this.lastShift == this.periodHigh)\n                    this.calculatePeriodHigh();\n            if (this.maintainLow)\n                if (this.lastShift == this.periodLow)\n                    this.calculatePeriodLow();\n            if (this.maintainSum) {\n                this.periodSum = this.periodSum - this.lastShift;\n            }\n        }\n        else {\n            this._push(data);\n        }\n        //TODO: FInd a better way\n        if (this.maintainHigh)\n            if (this.periodHigh <= data)\n                (this.periodHigh = data);\n        if (this.maintainLow)\n            if (this.periodLow >= data)\n                (this.periodLow = data);\n        if (this.maintainSum) {\n            this.periodSum = this.periodSum + data;\n        }\n    }\n    *iterator() {\n        this.resetCursor();\n        while (this.next()) {\n            yield this.current;\n        }\n    }\n    calculatePeriodHigh() {\n        this.resetCursor();\n        if (this.next())\n            this.periodHigh = this.current;\n        while (this.next()) {\n            if (this.periodHigh <= this.current) {\n                this.periodHigh = this.current;\n            }\n            ;\n        }\n        ;\n    }\n    calculatePeriodLow() {\n        this.resetCursor();\n        if (this.next())\n            this.periodLow = this.current;\n        while (this.next()) {\n            if (this.periodLow >= this.current) {\n                this.periodLow = this.current;\n            }\n            ;\n        }\n        ;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}