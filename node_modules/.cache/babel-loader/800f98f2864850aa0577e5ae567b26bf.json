{"ast":null,"code":"import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nexport class AwesomeOscillatorInput extends IndicatorInput {}\nexport class AwesomeOscillator extends Indicator {\n  constructor(input) {\n    super(input);\n    var highs = input.high;\n    var lows = input.low;\n    var fastPeriod = input.fastPeriod;\n    var slowPeriod = input.slowPeriod;\n    var slowSMA = new SMA({\n      values: [],\n      period: slowPeriod\n    });\n    var fastSMA = new SMA({\n      values: [],\n      period: fastPeriod\n    });\n    this.result = [];\n\n    this.generator = function* () {\n      var result;\n      var tick;\n      var medianPrice;\n      var slowSmaValue;\n      var fastSmaValue;\n      tick = yield;\n\n      while (true) {\n        medianPrice = (tick.high + tick.low) / 2;\n        slowSmaValue = slowSMA.nextValue(medianPrice);\n        fastSmaValue = fastSMA.nextValue(medianPrice);\n\n        if (slowSmaValue !== undefined && fastSmaValue !== undefined) {\n          result = fastSmaValue - slowSmaValue;\n        }\n\n        tick = yield result;\n      }\n    }();\n\n    this.generator.next();\n    highs.forEach((tickHigh, index) => {\n      var tickInput = {\n        high: tickHigh,\n        low: lows[index]\n      };\n      var result = this.generator.next(tickInput);\n\n      if (result.value != undefined) {\n        this.result.push(this.format(result.value));\n      }\n    });\n  }\n\n  nextValue(price) {\n    var result = this.generator.next(price);\n\n    if (result.value != undefined) {\n      return this.format(result.value);\n    }\n  }\n\n}\nAwesomeOscillator.calculate = awesomeoscillator;\nexport function awesomeoscillator(input) {\n  Indicator.reverseInputs(input);\n  var result = new AwesomeOscillator(input).result;\n\n  if (input.reversedInput) {\n    result.reverse();\n  }\n\n  Indicator.reverseInputs(input);\n  return result;\n}\n;","map":{"version":3,"sources":["/home/andre/Documents/f/f/node_modules/technicalindicators/lib/oscillators/AwesomeOscillator.js"],"names":["Indicator","IndicatorInput","SMA","AwesomeOscillatorInput","AwesomeOscillator","constructor","input","highs","high","lows","low","fastPeriod","slowPeriod","slowSMA","values","period","fastSMA","result","generator","tick","medianPrice","slowSmaValue","fastSmaValue","nextValue","undefined","next","forEach","tickHigh","index","tickInput","value","push","format","price","calculate","awesomeoscillator","reverseInputs","reversedInput","reverse"],"mappings":"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","sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nexport class AwesomeOscillatorInput extends IndicatorInput {\n}\nexport class AwesomeOscillator extends Indicator {\n    constructor(input) {\n        super(input);\n        var highs = input.high;\n        var lows = input.low;\n        var fastPeriod = input.fastPeriod;\n        var slowPeriod = input.slowPeriod;\n        var slowSMA = new SMA({ values: [], period: slowPeriod });\n        var fastSMA = new SMA({ values: [], period: fastPeriod });\n        this.result = [];\n        this.generator = (function* () {\n            var result;\n            var tick;\n            var medianPrice;\n            var slowSmaValue;\n            var fastSmaValue;\n            tick = yield;\n            while (true) {\n                medianPrice = (tick.high + tick.low) / 2;\n                slowSmaValue = slowSMA.nextValue(medianPrice);\n                fastSmaValue = fastSMA.nextValue(medianPrice);\n                if (slowSmaValue !== undefined && fastSmaValue !== undefined) {\n                    result = fastSmaValue - slowSmaValue;\n                }\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        highs.forEach((tickHigh, index) => {\n            var tickInput = {\n                high: tickHigh,\n                low: lows[index],\n            };\n            var result = this.generator.next(tickInput);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        var result = this.generator.next(price);\n        if (result.value != undefined) {\n            return this.format(result.value);\n        }\n    }\n    ;\n}\nAwesomeOscillator.calculate = awesomeoscillator;\nexport function awesomeoscillator(input) {\n    Indicator.reverseInputs(input);\n    var result = new AwesomeOscillator(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n"]},"metadata":{},"sourceType":"module"}