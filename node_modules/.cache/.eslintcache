[{"/home/andre/Documents/f/f/src/index.js":"1","/home/andre/Documents/f/f/src/App.js":"2","/home/andre/Documents/f/f/src/utils.js":"3","/home/andre/Documents/f/f/src/components/Dashboard.js":"4"},{"size":197,"mtime":1612982360000,"results":"5","hashOfConfig":"6"},{"size":4441,"mtime":1625170528914,"results":"7","hashOfConfig":"6"},{"size":998,"mtime":1625170156072,"results":"8","hashOfConfig":"6"},{"size":555,"mtime":1612982360000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"8nwkxk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/andre/Documents/f/f/src/index.js",[],["20","21"],"/home/andre/Documents/f/f/src/App.js",["22","23","24","25","26","27","28","29","30"],"/home/andre/Documents/f/f/src/utils.js",[],"/home/andre/Documents/f/f/src/components/Dashboard.js",["31"],"import React, { useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction Dashboard({ price, data }) {\n  const opts = {\n    tooltips: {\n      intersect: false,\n      mode: \"index\"\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  if (price === \"0.00\") {\n    return <h2>please select a currency pair</h2>;\n  }\n  return (\n    <div className=\"dashboard\">\n      <h2>{`$${price}`}</h2>\n\n      <div className=\"chart-container\">\n        <Line data={data} options={opts} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":19,"nodeType":"38","messageId":"39","endLine":5,"endColumn":30},{"ruleId":"36","severity":1,"message":"40","line":6,"column":10,"nodeType":"38","messageId":"39","endLine":6,"endColumn":14},{"ruleId":"36","severity":1,"message":"41","line":6,"column":16,"nodeType":"38","messageId":"39","endLine":6,"endColumn":19},{"ruleId":"36","severity":1,"message":"42","line":14,"column":10,"nodeType":"38","messageId":"39","endLine":14,"endColumn":18},{"ruleId":"36","severity":1,"message":"43","line":14,"column":20,"nodeType":"38","messageId":"39","endLine":14,"endColumn":31},{"ruleId":"36","severity":1,"message":"44","line":16,"column":10,"nodeType":"38","messageId":"39","endLine":16,"endColumn":17},{"ruleId":"36","severity":1,"message":"45","line":19,"column":7,"nodeType":"38","messageId":"39","endLine":19,"endColumn":11},{"ruleId":"46","severity":1,"message":"47","line":36,"column":42,"nodeType":"48","messageId":"49","endLine":36,"endColumn":44},{"ruleId":"50","severity":1,"message":"51","line":108,"column":11,"nodeType":"52","endLine":108,"endColumn":36},{"ruleId":"36","severity":1,"message":"53","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":23},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'CSVDownload' is defined but never used.","Identifier","unusedVar","'macd' is defined but never used.","'sma' is defined but never used.","'priceOBV' is assigned a value but never used.","'setpriceOBV' is assigned a value but never used.","'csvdata' is assigned a value but never used.","'ssma' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","Assignments to the 'macdarray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]